############################################################################################
# Transition strength of all possible transitions of the Lithium D2 line (all others are 0 #
############################################################################################

import math
from numba import njit
import scipy.constants as scc
import numpy as np

@njit(cache = True)
def calculate_transition_strength(GS,ES,pol,B):
    trans_strength= 0 

    # SIGMIN
    if pol==0:
        if GS == 0 and ES == 2:  # Fit 1
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.00315556688171764 + 8.98311348385006*(B) + 3562753.74291455*(B)**3 + 9598.74317221926*(B)**2 - 1.31799252340198e-5*math.sin(11817.6119271765*(B)) - 0.00321412203705857*math.exp(-89814584.4190672*(B)**2) - 17.9280082783021*(B)*math.exp(-89814584.4190672*(B)**2)
            elif B<1e-6 and B>-1e-6:
                trans_strength=0.0
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 14.3394926644956*(B) + 305697.993375698*(B)**2 + 0.168448667089121*math.exp(-0.00024178568673407/(B)) + 0.196485378343507*math.exp(-0.538265347842318/math.exp(-0.00024178568673407/(B))) - 101235637.326691*(B)**3 - 359.054361020487*(B)*math.exp(-0.00024178568673407/(B))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.264798406065489 + (-0.0881706790878513 - 2.34448146425693*(B)*math.sin(4.63269372739669*math.sin(math.sin(5.97822004153038 + math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(0.264798406065489 + 7.4588421213006*(B)))))))))))/(0.713613685744272 + 194.198923206429*math.sin(math.sin(math.sin((B)))))
            elif B > 0.1:
                trans_strength = 0.25

        if GS == 1 and ES == 2:  # Fit 2 11
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.00789918684479861 + 16.2362213395712*(B) + 9060.58240871076*(B)**2 + -0.119039275246968/(-0.773066986496016 - math.exp(-12974.0533061806*(B))) + 1.67097583213224*(B)/(-0.0072071551433842 - math.exp(-24143.0976770203*(B)) - 8.57815991451318*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.00789918684479861 + 16.2362213395712*(B) + 9060.58240871076*(B)**2 + -0.119039275246968/(-0.773066986496016 - math.exp(-12974.0533061806*(B))) + 1.67097583213224*(B)/(-0.0072071551433842 - math.exp(-24143.0976770203*(B)) - 8.57815991451318*(B))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 3.66806985105237 + 8.80081419186296*(B) + 386.738113345495*(B)**3 + 0.599271353897591*math.cos(205.012052299838*(B)**3) - 1.98330256445065*math.sqrt((B)) - 4.13190107343054*math.exp(16.9270101609483*(B)**2)
            elif B > 0.1:
                trans_strength = 0

        if GS == 0 and ES == 3:  # Fit 3 8
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.00233421618675842 + 0.0209409312848411*(B) + 0.319717124595117*math.exp(188.779534966703*(B)) + 8.55217527516896*(B)*math.exp(188.779534966703*(B)) - 0.148811498926032*math.exp(386.193479860839*(B)) - 29541.5995544242*(B)**3*math.exp(188.779534966703*(B))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0108108069172076 + 21278.8044790691*(B)**2 + 0.726766835916032/(3.88587932753214 + 1.4238751265832*math.exp(42829.9890698615*(B))) + -4.20730369072639*(B)/(-0.0476339861508609 - 21278.8044790691*(B)**2*math.exp(42829.9890698615*(B))) - 30.6295356291545*(B)
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.0108108069172076 + 21278.8044790691*(B)**2 + 0.726766835916032/(3.88587932753214 + 1.4238751265832*math.exp(42829.9890698615*(B))) + -4.20730369072639*(B)/(-0.0476339861508609 - 21278.8044790691*(B)**2*math.exp(42829.9890698615*(B))) - 30.6295356291545*(B)
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0
            elif B > 0.1:
                trans_strength = 0

        if GS == 1 and ES == 3:  # Fit 4 9
            if B <= -0.1:
                trans_strength = 0.24996197026337 + 0.0964946858830943*(B)*math.exp(32.7867074993821*(B)) + 1752.20010616173*(B)**2*math.exp(213.265399414469*(B)) - 0.182700868494217*math.exp(112.413190517829*(B))
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.24996197026337 + 0.0964946858830943*(B)*math.exp(32.7867074993821*(B)) + 1752.20010616173*(B)**2*math.exp(213.265399414469*(B)) - 0.182700868494217*math.exp(112.413190517829*(B))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0575981349301398 + 0.00157543058193799*math.exp(111999.565703655*(B)) + 247.350629264121*(B)*math.exp(12196.6854550282*(B)) + 4064837685.49001*(B)**3*math.exp(12196.6854550282*(B)) - 38.6288422835887*(B) - 7656.9293911392*(B)**2 - 0.0544741340746314*math.exp(12196.6854550282*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.000216080829809297 + 0.0058864113644609*math.exp(-3416.91459377774*(B)) + 191.794446973769*(B)*math.exp(-17967.8451819225*(B)) - 772.024149001392*(B)*math.exp(-32135.7104709816*(B))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 6.99619762690494e-10 + -1.87256867042627e-10/(B) + 6.50005496454714e-10/(B)**2 + -5.2504927922014e-13/(B)**3 - 8.36700136116724e-10*(B)
            elif B > 0.1:
                trans_strength = 6.99619762690494e-10 + -1.87256867042627e-10/(B) + 6.50005496454714e-10/(B)**2 + -5.2504927922014e-13/(B)**3 - 8.36700136116724e-10*(B)

        if GS == 0 and ES == 4:  # Fit 5 12
            if B <= -0.1:
                trans_strength = 0.0832
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.0820971488373775 + -5.43043669419711e-5/(B) + -4.55451842167282e-8/(B)**2 + -6.42864017302887e-7/(9.29945983752797e-6 + 0.279207007585243*(B)**2) - 0.0128924390718517*(B) - 0.0498725355563344*(B)**2
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.142639194768683 + 1489.41718302107*(B)/(90123199.5855845*(B)**2 + math.exp(-8561.58074910608*(B))) - 2.58797414803747*(B) - 0.0822447670743667*math.cos(1686.81257206699*(B)) - 0.0137010650627817*math.sqrt(0.693241137286293 + 90123199.5855845*(B)**2)
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.142639194768683 + 1489.41718302107*(B)/(90123199.5855845*(B)**2 + math.exp(-8561.58074910608*(B))) - 2.58797414803747*(B) - 0.0822447670743667*math.cos(1686.81257206699*(B)) - 0.0137010650627817*math.sqrt(0.693241137286293 + 90123199.5855845*(B)**2)
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.136118966934315*(B) + -2.42457996361666e-5/(B) + 0.00231377790784612/math.sqrt((B)) - 0.0152537531200706 - 0.548113796415037*(B)**2
            elif B > 0.1:
                trans_strength = 0

        if GS == 1 and ES == 4:  # Fit 6
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.000549491789411206 + 0.06914772716537*math.exp(163.021874929838*(B))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0852017667523747 + 47.5765452370213*(B) + 9016451.26360562*(B)**3 + 31008.9180948872*(B)**2 + 824.852509823834*(B)*math.exp(23328.6766165037*(B)) - 0.0259906792660731*math.exp(41766.2815101816*(B)) - 2599591.82393459*(B)**2*math.exp(23328.6766165037*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.0613869350761507 + 197.051995483304*(B) + 4366.46117509766*(B)**2*math.cos(0.083646423994571 + 0.284532670559242*math.sin(4366.46117509766*(B))) + -32.8012566219232*(B)/(0.083646423994571 + 3198877.48550891*(B)**2 - 494.816712367314*(B)) - 201.685544488917*math.sqrt((B)**2)
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.0784775949520643 + 0.000145534274964593*math.sin(2.47262282402864*math.log(B)) + 0.00312422917834946*B*math.sin(2.47262282402864*math.log(B)) + 0.0827858872151855*B**2*math.sin(2.47262282402864*math.log(B)) - 0.0441329086835401*B - 0.00757820457850897*math.log(B) - 0.00172150408231729*math.log(B)**2 - 6.91067643719195e-5*math.log(B)*math.sin(2.47262282402864*math.log(B))
            elif B > 0.1:
                trans_strength = 0.0832

        if GS == 2 and ES == 5:  # Fit 7
            if B <= -0.1:
                trans_strength = 0.0832
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.0840326671288973 + 0.0212711598740099*(B) + 9.96769640198108e-6/(B) + 7.30427880705406*(B)**4 + 2.47742278697079*(B)**3 + 0.327407419678764*(B)**2 + -1.29913837892705e-6/(4.63244889272615e-5 + (B)**2 - 0.00703252870391773*(B))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.00188544318933193 - 123.224743565407*(B) - 118975.522998915*(B)**2 - 44223233.6872039*(B)**3 - 0.00508412980447486*math.exp(161279494825.373*(B)**3 - math.exp(64452.4785660243*(B)))
            elif B > 0.0 and B <= 10e-4:
                trans_strength= 0.0398405100536893 + 69.489901263837*(B) + 114.557369931512*(B)*math.exp(-50084.0824617401*(B)) + 3425023.807729*(B)**2*math.sin(math.exp(-50084.0824617401*(B))) - 23304.8034666486*(B)**2 - 0.0398405100536893*math.exp(-11147.3989161182*(B)) - 631.595675277579*(B)*math.exp(-11147.3989161182*(B))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.203956466863957 + -1.37438600748932e-5/(B) + 0.28816246504589*math.sqrt((B)) + 0.838626419928453*(B)**2 + -4.54535081196751e-6/(3.8518047582647e-5 + (B)**2) + 0.00047537364335833*(B)/(0.000161224398859508 + (B)**2) - 0.57941747430887*(B)
            elif B > 0.1:
                trans_strength = 0.25

        if GS == 3 and ES == 5:  # Fit 8 
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.00108553080647965 + 0.0171201464534378*(B) + -7.62932646829284e-6/(B) + 0.0321197456933535*math.exp(317.494453284501*(B)) - 0.701397653758764*(B)**3 - 2.20302724297532*(B)*math.exp(183.159843363252*(B))
            elif B > -10e-4 and B <= 0.000003:
                trans_strength = 0.168811066830996 + 75.7448545721189*(B) + 0.208560279415019*math.sin(math.sin(math.sin(6.1396977577083 + math.sin(3644.38316179751*(B) + 1188783.82946249*(B)**2)))) - 0.0790373923558694*math.sin(6.1396977577083 + math.sin(3644.38316179751*(B) + 1188783.82946249*(B)**2)) - 29520.3001211132*(B)**2*math.sin(3644.38316179751*(B) + 1188783.82946249*(B)**2) - 0.0186856064238961*math.sin(3644.38316179751*(B) + 1188783.82946249*(B)**2)*math.sin(math.sin(6.1396977577083 + math.sin(3644.38316179751*(B) + 1188783.82946249*(B)**2)))
            elif B > 0.000003 and B <= 10e-4:
                trans_strength = 52.5711259057128*(B) + 191.39670637594*(B)**2 + math.log((B))**2*math.sin(0.000263776772555907*math.log((B))) - 0.431514830503392 - 0.0881714194239579*math.log((B)) - 0.0353643996045187*math.sin(math.sin(math.log((B))))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.00448519444080791 + 0.407790933231955*(B)**2 + 0.10732663378408*math.exp(-350.610900550838*(B)) + 0.0663598811932544*math.exp(-113.887990398196*(B)) + 31.0991291414477*(B)*math.exp(-337.144809157947*(B)) - 0.0813380434836137*(B)
            elif B > 0.1:
                trans_strength = 0

        if GS == 2 and ES == 6:  # Fit 9
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = -0.000304031430976815/(B) + -3.69741570930425e-7/(7.27423590173855e-7 + (B)**2) - 0.0100187297604695 - 0.141387232843303*(B) - 0.694459692072988*(B)*math.sin(math.sin(6.28288127574861 + (B)))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.125257036331212 + 85.6271701958128*(B) + 17407113.9465603*(B)**3 + 57869.4913482512*(B)**2 + 0.0134038796644191*math.exp(11782.1228905209*(B)) + 0.000216590507178981*math.exp(105432.293629986*(B)) - 254.5014212687*(B)*math.exp(11782.1228905209*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength= 0.0790435411937701 + 0.000629683506436169*math.log(0.13253458680582 + 4303984.40707775*(B)**2)**2 + 7.85096621975551*(B)*math.log(0.13253458680582 + 4303984.40707775*(B)**2)**2 - 0.0154454271775515*math.log(0.13253458680582 + 4303984.40707775*(B)**2) - 0.00312884798352583*math.log(0.13253458680582 + 4303984.40707775*(B)**2)**3 - 677.563134281413*(B)**2*math.log(0.13253458680582 + 4303984.40707775*(B)**2)**3
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.00505946967945506 + 0.0051882921178815*math.sqrt((B)) + 1.600020515591*(B)*math.sqrt((B)) + 0.0689134119155708*math.exp(-188.699267169983*(B)) - 0.370328997886927*(B) - 2.01400789711539*(B)**2
            elif B > 0.1:
                trans_strength = 0

        if GS == 3 and ES == 6:  # Fit 10 
            if B <= -0.1:
                trans_strength = 0.25
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.247107708816469 + 0.213534927223746*math.exp(381.303065673768*(B)) + 29.0186296213906*(B)*math.exp(381.303065673768*(B)) - 0.0473024770057945*(B) - 0.220186059948555*(B)**2 - 0.0316884438014038*math.exp(98.8091241959993*(B)) - 0.281748209084327*math.exp(478.371842935082*(B))
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0431210817547606 + 5.05476537877784e16*(B)**6 - 615.438639048601*(B) - 1568654.76863082*(B)**2 - 23330638784.8541*(B)**4 - 2275013330.30407*(B)**3*math.exp(771.249262809511*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.0437599636473709 + 1699994742.94741*(B)**4 + 25381.5520632374*(B)**2 + 14134.1391706221*(B)**3/(9.74464901298619e-7 + 31.0980376313721*(B)**2) - 478.839599585061*(B) - 10587952.4478466*(B)**3
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.0541074377235387 + 2.2503494791961*(B) + 0.208355297501883*math.sqrt((B)) + math.sin(math.sin(0.474292959313023*math.sin((B)*math.sqrt((B))))) - 0.174876953187881*math.sqrt(0.0772030160174584 + 41.9971767522967*(B)*math.sqrt((B)) - math.sqrt((B))) - 0.285852947249267*math.sqrt((B))*math.sqrt(0.0772030160174584 + 41.9971767522967*(B)*math.sqrt((B)) - math.sqrt((B)))
            elif B > 0.1:
                trans_strength = 0.0832

        if GS == 5 and ES == 7:  # Fit 11 
            if B <= -0.1:
                trans_strength = 0.0832
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.0833333346133657 + 1.08219068880264e-17/(B)**4 + -4.25494436652391e-14/(B)**3 + -6.31365209126638e-10*(B)**2/((B)**4 - 9.53798829307758e-19 - 2.3694362036846*(B)**7 - 2.3694362036846*(B)**6)
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0770209759151018 + 0.0735162261314319*math.exp(46006.1996234966*(B)) + 448.846206747094*(B)*math.exp(14987.5511731407*(B)) - 11.5845454947968*(B) - 5932.53768471421*(B)**2 - 0.136349084951021*math.exp(30217.1044680878*(B))
            elif B > 0.0 and B <= 10e-4:
                trans_strength= 0.0140883247154161*math.exp(-1.16059872423927e-8/(B) + 55694280.6349919*(B)**2 - 36096.0725595959*(B) - 78697743622604.4*(B)**4)
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 6.64897731678647e-7 + 0.0140213340597043/math.exp(36589.7800949612*(B) + 119501212834499*(B)**4 - 61786349.2141431*(B)**2)
            elif B > 0.1:
                trans_strength = 0

        if GS == 5 and ES == 8:  # Fit 12 5
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.0380681274669055 + 2.13719290114541*(B) - 0.00163957785690334*math.sin(2.99220538357426 + 2443.07631634479*(B)) - 4.37747330238525*(B)*math.sin(2.99220538357426 + 2443.07631634479*(B)) - 0.0380681274669055*math.sin(2.99220538357426 + 2397.69176521512*(B) + math.sin(math.sin(math.sin(math.sin(6.0832386958357 + 4804.97762893915*(B))))))
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.0380681274669055 + 2.13719290114541*(B) - 0.00163957785690334*math.sin(2.99220538357426 + 2443.07631634479*(B)) - 4.37747330238525*(B)*math.sin(2.99220538357426 + 2443.07631634479*(B)) - 0.0380681274669055*math.sin(2.99220538357426 + 2397.69176521512*(B) + math.sin(math.sin(math.sin(math.sin(6.0832386958357 + 4804.97762893915*(B))))))
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.0832
            elif B > 0.1:
                trans_strength = 0.0832

        if GS == 5 and ES == 9:  # Fit 13 7
            if B <= -0.1:
                trans_strength = 0
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.00192521763651587 + 0.17788205843815*(B) + 0.0142482216115707*math.exp(-19648697.2530107*(B)**2) + (0.0192840363606575 + 226.878756119063*(B)*math.exp(-19648697.2530107*(B)**2))/(0.68493462411613 + 129089234.087972*(B)**2 + 2516.45342974767*(B)*math.exp(-19648697.2530107*(B)**2)) - 1723.76129892656*(B)**2
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.00192521763651587 + 0.17788205843815*(B) + 0.0142482216115707*math.exp(-19648697.2530107*(B)**2) + (0.0192840363606575 + 226.878756119063*(B)*math.exp(-19648697.2530107*(B)**2))/(0.68493462411613 + 129089234.087972*(B)**2 + 2516.45342974767*(B)*math.exp(-19648697.2530107*(B)**2)) - 1723.76129892656*(B)**2
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0
            elif B > 0.1:
                trans_strength = 0

        if GS == 4 and ES == 10:  # Fit 14 14
            if B <= -0.1:
                trans_strength = 0.25
            elif B > -0.1 and B <= -10e-4:
                trans_strength = 0.25
            elif B > -10e-4 and B <= 0.0:
                trans_strength = 0.25
            elif B > 0.0 and B <= 10e-4:
                trans_strength = 0.25
            elif B > 10e-4 and B <= 0.1:
                trans_strength = 0.25
            elif B > 0.1:
                trans_strength = 0.25

    #SIGPLS
    elif pol==2: #SIGMA PLUS


        if GS==2 and ES==8: #Fit 1 10
            if B >= 0.1:
                trans_strength = 0
            elif B < 0.1 and B >= 10e-4:
                trans_strength = 0
            elif B< 10e-4 and B >= 0.0:
                trans_strength = 0.00315556688171764 + 8.98311348385006*((-B)) + 3562753.74291455*((-B))**3 + 9598.74317221926*((-B))**2 - 1.31799252340198e-5*math.sin(11817.6119271765*((-B))) - 0.00321412203705857*math.exp(-89814584.4190672*((-B))**2) - 17.9280082783021*((-B))*math.exp(-89814584.4190672*((-B))**2)
            elif B>-1e-6 and B<1e-6:
                trans_strength=0.0
            elif B < 0.0 and B >= -10e-4:
                trans_strength = 14.3394926644956*((-B)) + 305697.993375698*((-B))**2 + 0.168448667089121*math.exp(-0.00024178568673407/((-B))) + 0.196485378343507*math.exp(-0.538265347842318/math.exp(-0.00024178568673407/((-B)))) - 101235637.326691*((-B))**3 - 359.054361020487*((-B))*math.exp(-0.00024178568673407/((-B)))
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 0.264798406065489 + (-0.0881706790878513 - 2.34448146425693*((-B))*math.sin(4.63269372739669*math.sin(math.sin(5.97822004153038 + math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(0.264798406065489 + 7.4588421213006*((-B))))))))))))/(0.713613685744272 + 194.198923206429*math.sin(math.sin(math.sin(((-B))))))
            elif B < -0.1:
                trans_strength = 0.25

        if GS==3 and ES==8: #Fit 2 11
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0:
                trans_strength=0.00789918684479861 + 16.2362213395712 * (-B) + 9060.58240871076 * (-B) ** 2 + -0.119039275246968 / (-0.773066986496016 - math.exp(-12974.0533061806 * (-B))) + 1.67097583213224 * (-B) / (-0.0072071551433842 - math.exp(-24143.0976770203 * (-B)) - 8.57815991451318 * (-B))
            elif B<0 and B>=-10e-4:
                trans_strength=0.00789918684479861 + 16.2362213395712 * (-B) + 9060.58240871076 * (-B) ** 2 + -0.119039275246968 / (-0.773066986496016 - math.exp(-12974.0533061806 * (-B))) + 1.67097583213224 * (-B) / (-0.0072071551433842 - math.exp(-24143.0976770203 * (-B)) - 8.57815991451318 * (-B))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=3.66806985105237 + 8.80081419186296*(-B) + 386.738113345495*(-B)**3 + 0.599271353897591*math.cos(205.012052299838*(-B)**3) - 1.98330256445065*math.sqrt((-B)) - 4.13190107343054*math.exp(16.9270101609483*(-B)**2)
            elif B<-0.1:
                trans_strength=0.0

        if GS==2 and ES==7: #Fit 3 8
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.00233421618675842 + 0.0209409312848411*(-B) + 0.319717124595117*math.exp(188.779534966703*(-B)) + 8.55217527516896*(-B)*math.exp(188.779534966703*(-B)) - 0.148811498926032*math.exp(386.193479860839*(-B)) - 29541.5995544242*(-B)**3*math.exp(188.779534966703*(-B))
            elif B<10e-4 and B>=0:
                trans_strength=0.0108108069172076 + 21278.8044790691 * (-B) ** 2 + 0.726766835916032 / (3.88587932753214 + 1.4238751265832 * math.exp(42829.9890698615 * (-B))) + -4.20730369072639 * (-B) / (-0.0476339861508609 - 21278.8044790691 * (-B) ** 2 * math.exp(42829.9890698615 * (-B))) - 30.6295356291545 * (-B)
            elif B<0 and B>=-10e-4:
                trans_strength = 0.0108108069172076 + 21278.8044790691 * (-B) ** 2 + 0.726766835916032 / (3.88587932753214 + 1.4238751265832 * math.exp(42829.9890698615 * (-B))) + -4.20730369072639 * (-B) / (-0.0476339861508609 - 21278.8044790691 * (-B) ** 2 * math.exp(42829.9890698615 * (-B))) - 30.6295356291545 * (-B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==3 and ES==7: #Fit 4 9
            if B>=0.1:
                trans_strength=0.24996197026337 + 0.0964946858830943*(-B)*math.exp(32.7867074993821*(-B)) + 1752.20010616173*(-B)**2*math.exp(213.265399414469*(-B)) - 0.182700868494217*math.exp(112.413190517829*(-B))
            elif B<0.1 and B>=10e-4:
                trans_strength=0.24996197026337 + 0.0964946858830943*(-B)*math.exp(32.7867074993821*(-B)) + 1752.20010616173*(-B)**2*math.exp(213.265399414469*(-B)) - 0.182700868494217*math.exp(112.413190517829*(-B))
            elif B<10e-4 and B>=0:
                trans_strength=0.0575981349301398 + 0.00157543058193799*math.exp(111999.565703655*(-B)) + 247.350629264121*(-B)*math.exp(12196.6854550282*(-B)) + 4064837685.49001*(-B)**3*math.exp(12196.6854550282*(-B)) - 38.6288422835887*(-B) - 7656.9293911392*(-B)**2 - 0.0544741340746314*math.exp(12196.6854550282*(-B))
            elif B<0 and B>=-10e-4:
                trans_strength=0.000216080829809297 + 0.0058864113644609 * math.exp(-3416.91459377774 * (-B)) + 191.794446973769 * (-B) * math.exp(-17967.8451819225 * (-B)) - 772.024149001392 * (-B) * math.exp(-32135.7104709816 * (-B))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=6.99619762690494e-10 + -1.87256867042627e-10 / (-B) + 6.50005496454714e-10 / (-B) ** 2 + -5.2504927922014e-13 / (-B) ** 3 - 8.36700136116724e-10 * (-B)
            elif B<-0.1:
                trans_strength=6.99619762690494e-10 + -1.87256867042627e-10/(-B) + 6.50005496454714e-10/(-B)**2 + -5.2504927922014e-13/(-B)**3 - 8.36700136116724e-10*(-B)

        if GS==2 and ES==9: #Fit 5 12
            if B>=0.1:
                trans_strength=0.0832
            elif B<0.1 and B>=10e-4:
                #trans_strength=0.0820971488373775 + -5.43043669419711e-5/(-B) + -4.55451842167282e-8/(-B)**2 + -6.42864017302887e-7/(9.29945983752797e-6 + 0.279207007585243*(-B)**2) - 0.0128924390718517*(-B) - 0.0498725355563344*(-B)**2
                trans_strength = 0.0541074377235387 + 2.2503494791961*((B)) + 0.208355297501883*math.sqrt(((B))) + math.sin(math.sin(0.474292959313023*math.sin(((B))*math.sqrt(((B)))))) - 0.174876953187881*math.sqrt(0.0772030160174584 + 41.9971767522967*((B))*math.sqrt(((B))) - math.sqrt(((B)))) - 0.285852947249267*math.sqrt(((B)))*math.sqrt(0.0772030160174584 + 41.9971767522967*((B))*math.sqrt(((B))) - math.sqrt(((B))))
            elif B<10e-4 and B>=0:
                trans_strength = 0.142639194768683 + 1489.41718302107 * (-B) / (90123199.5855845 * (-B) ** 2 + math.exp(-8561.58074910608 * (-B))) - 2.58797414803747 * (-B) - 0.0822447670743667 * math.cos(1686.81257206699 * (-B)) - 0.0137010650627817 * math.sqrt(0.693241137286293 + 90123199.5855845 * (-B) ** 2)
            elif B<0 and B>=-10e-4:
                trans_strength=0.142639194768683 + 1489.41718302107*(-B)/(90123199.5855845*(-B)**2 + math.exp(-8561.58074910608*(-B))) - 2.58797414803747*(-B) - 0.0822447670743667*math.cos(1686.81257206699*(-B)) - 0.0137010650627817*math.sqrt(0.693241137286293 + 90123199.5855845*(-B)**2)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.136118966934315*(-B) + -2.42457996361666e-5/(-B) + 0.00231377790784612/math.sqrt((-B)) - 0.0152537531200706 - 0.548113796415037*(-B)**2
            elif B<-0.1:
                trans_strength=0.0

        if GS==3 and ES==9: #Fit 6 13
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.000549491789411206 + 0.06914772716537*math.exp(163.021874929838*(-B))
            elif B<10e-4 and B>=0:
                trans_strength=0.0852017667523747 + 47.5765452370213*(-B) + 9016451.26360562*(-B)**3 + 31008.9180948872*(-B)**2 + 824.852509823834*(-B)*math.exp(23328.6766165037*(-B)) - 0.0259906792660731*math.exp(41766.2815101816*(-B)) - 2599591.82393459*(-B)**2*math.exp(23328.6766165037*(-B))
            elif B<0 and B>=-10e-4:
                trans_strength=0.0613869350761507 + 197.051995483304*(-B) + 4366.46117509766*(-B)**2*math.cos(0.083646423994571 + 0.284532670559242*math.sin(4366.46117509766*(-B))) + -32.8012566219232*(-B)/(0.083646423994571 + 3198877.48550891*(-B)**2 - 494.816712367314*(-B)) - 201.685544488917*math.sqrt((-B)**2)
            elif B<-10e-4 and B>=-0.1:
                #trans_strength=0.111909425930986 + 0.154901484579354*(-B) + 3.95604985999887e-8/(-B)**2 + (7.72125132390956e-7 - 0.0182629424595646*math.sqrt(0.0196619941162237*(-B)))/(-B) + -1.67578657303475e-11/((-B)**3*math.cos(0.154901484579354*(-B) + 3.95604985999887e-8/(-B)**2 - 19948.489935299*(-B)**2)) - 0.809177180016206*math.sqrt(0.0196619941162237*(-B))
                trans_strength = 0.0840326671288973 + 0.0212711598740099 * ((B)) + 9.96769640198108e-6 / ((B)) + 7.30427880705406 * ((B)) ** 4 + 2.47742278697079 * ((B)) ** 3 + 0.327407419678764 * ((B)) ** 2 + -1.29913837892705e-6 / (4.63244889272615e-5 + ((B)) ** 2 - 0.00703252870391773 * ((B)))
            elif B<-0.1:
                trans_strength=0.0832

        if GS==0 and ES==0: #Fit 7 1
            if B >= 0.1:
                trans_strength = 0.0832
            elif B < 0.1 and B >= 10e-4:
                trans_strength = 0.0840326671288973 + 0.0212711598740099*((-B)) + 9.96769640198108e-6/((-B)) + 7.30427880705406*((-B))**4 + 2.47742278697079*((-B))**3 + 0.327407419678764*((-B))**2 + -1.29913837892705e-6/(4.63244889272615e-5 + ((-B))**2 - 0.00703252870391773*((-B)))
            elif B <10e-4 and B >= 0.0:
                trans_strength = 0.00188544318933193 - 123.224743565407*((-B)) - 118975.522998915*((-B))**2 - 44223233.6872039*((-B))**3 - 0.00508412980447486*math.exp(161279494825.373*((-B))**3 - math.exp(64452.4785660243*((-B))))
            elif B < 0.0 and B >= -10e-4:
                trans_strength= 0.0398405100536893 + 69.489901263837*((-B)) + 114.557369931512*((-B))*math.exp(-50084.0824617401*((-B))) + 3425023.807729*((-B))**2*math.sin(math.exp(-50084.0824617401*((-B)))) - 23304.8034666486*((-B))**2 - 0.0398405100536893*math.exp(-11147.3989161182*((-B))) - 631.595675277579*((-B))*math.exp(-11147.3989161182*((-B)))
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 0.203956466863957 + -1.37438600748932e-5/((-B)) + 0.28816246504589*math.sqrt(((-B))) + 0.838626419928453*((-B))**2 + -4.54535081196751e-6/(3.8518047582647e-5 + ((-B))**2) + 0.00047537364335833*((-B))/(0.000161224398859508 + ((-B))**2) - 0.57941747430887*((-B))
            elif B < -0.1:
                trans_strength = 0.25


        if GS==1 and ES==0: #Fit 8 2
            if B >= 0.1:
                trans_strength = 0
            elif B < 0.1 and B >= 10e-4:
                trans_strength = 0.00108553080647965 + 0.0171201464534378 * ((-B)) + -7.62932646829284e-6 / (
                        (-B)) + 0.0321197456933535 * math.exp(317.494453284501 * ((-B))) - 0.701397653758764 * (
                                         (-B)) ** 3 - 2.20302724297532 * ((-B)) * math.exp(183.159843363252 * ((-B)))
            elif B < 10e-4 and B >= -0.000003:
                trans_strength = 0.168811066830996 + 75.7448545721189 * ((-B)) + 0.208560279415019 * math.sin(math.sin(
                        math.sin(6.1396977577083 + math.sin(
                            3644.38316179751 * ((-B)) + 1188783.82946249 * ((-B)) ** 2)))) - 0.0790373923558694 * math.sin(
                        6.1396977577083 + math.sin(
                            3644.38316179751 * ((-B)) + 1188783.82946249 * ((-B)) ** 2)) - 29520.3001211132 * (
                                         (-B)) ** 2 * math.sin(
                        3644.38316179751 * ((-B)) + 1188783.82946249 * ((-B)) ** 2) - 0.0186856064238961 * math.sin(
                        3644.38316179751 * ((-B)) + 1188783.82946249 * ((-B)) ** 2) * math.sin(
                        math.sin(6.1396977577083 + math.sin(3644.38316179751 * ((-B)) + 1188783.82946249 * ((-B)) ** 2)))
            elif B < -0.000003 and B >= -10e-4:
                trans_strength = 52.5711259057128 * ((-B)) + 191.39670637594 * ((-B)) ** 2 + math.log(
                        ((-B))) ** 2 * math.sin(
                        0.000263776772555907 * math.log(((-B)))) - 0.431514830503392 - 0.0881714194239579 * math.log(
                        ((-B))) - 0.0353643996045187 * math.sin(math.sin(math.log(((-B)))))
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 0.00448519444080791 + 0.407790933231955 * ((-B)) ** 2 + 0.10732663378408 * math.exp(
                        -350.610900550838 * ((-B))) + 0.0663598811932544 * math.exp(
                        -113.887990398196 * ((-B))) + 31.0991291414477 * ((-B)) * math.exp(
                        -337.144809157947 * ((-B))) - 0.0813380434836137 * ((-B))
            elif B < -0.1:
                trans_strength = 0

        if GS==0 and ES==1: #Fit 9 3
            if B >= 0.1:
                trans_strength = 0
            elif B < 0.1 and B >= 10e-4:
                trans_strength = -0.000304031430976815/((-B)) + -3.69741570930425e-7/(7.27423590173855e-7 + ((-B))**2) - 0.0100187297604695 - 0.141387232843303*((-B)) - 0.694459692072988*((-B))*math.sin(math.sin(6.28288127574861 + ((-B))))
            elif B < 10e-4 and B >= 0.0:
                trans_strength = 0.125257036331212 + 85.6271701958128*((-B)) + 17407113.9465603*((-B))**3 + 57869.4913482512*((-B))**2 + 0.0134038796644191*math.exp(11782.1228905209*((-B))) + 0.000216590507178981*math.exp(105432.293629986*((-B))) - 254.5014212687*((-B))*math.exp(11782.1228905209*((-B)))
            elif B < 0.0 and B >= -10e-4:
                trans_strength= 0.0790435411937701 + 0.000629683506436169*math.log(0.13253458680582 + 4303984.40707775*((-B))**2)**2 + 7.85096621975551*((-B))*math.log(0.13253458680582 + 4303984.40707775*((-B))**2)**2 - 0.0154454271775515*math.log(0.13253458680582 + 4303984.40707775*((-B))**2) - 0.00312884798352583*math.log(0.13253458680582 + 4303984.40707775*((-B))**2)**3 - 677.563134281413*((-B))**2*math.log(0.13253458680582 + 4303984.40707775*((-B))**2)**3
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 0.00505946967945506 + 0.0051882921178815*math.sqrt(((-B))) + 1.600020515591*((-B))*math.sqrt(((-B))) + 0.0689134119155708*math.exp(-188.699267169983*((-B))) - 0.370328997886927*((-B)) - 2.01400789711539*((-B))**2
            elif B < -0.1:
                trans_strength = 0

        if GS==1 and ES==1: #Fit 10 4
            if B >= 0.1:
                trans_strength = 0.25
            elif B < 0.1 and B >= 10e-4:
                trans_strength = 0.247107708816469 + 0.213534927223746*math.exp(381.303065673768*((-B))) + 29.0186296213906*((-B))*math.exp(381.303065673768*((-B))) - 0.0473024770057945*((-B)) - 0.220186059948555*((-B))**2 - 0.0316884438014038*math.exp(98.8091241959993*((-B))) - 0.281748209084327*math.exp(478.371842935082*((-B)))
            elif B < 10e-4 and B >= 0.0:
                trans_strength = 0.0431210817547606 + 5.05476537877784e16*((-B))**6 - 615.438639048601*((-B)) - 1568654.76863082*((-B))**2 - 23330638784.8541*((-B))**4 - 2275013330.30407*((-B))**3*math.exp(771.249262809511*((-B)))
            elif B < 0.0 and B >= -10e-4:
                trans_strength = 0.0437599636473709 + 1699994742.94741*((-B))**4 + 25381.5520632374*((-B))**2 + 14134.1391706221*((-B))**3/(9.74464901298619e-7 + 31.0980376313721*((-B))**2) - 478.839599585061*((-B)) - 10587952.4478466*((-B))**3
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 0.0541074377235387 + 2.2503494791961*((-B)) + 0.208355297501883*math.sqrt(((-B))) + math.sin(math.sin(0.474292959313023*math.sin(((-B))*math.sqrt(((-B)))))) - 0.174876953187881*math.sqrt(0.0772030160174584 + 41.9971767522967*((-B))*math.sqrt(((-B))) - math.sqrt(((-B)))) - 0.285852947249267*math.sqrt(((-B)))*math.sqrt(0.0772030160174584 + 41.9971767522967*((-B))*math.sqrt(((-B))) - math.sqrt(((-B))))
            elif B < -0.1:
                trans_strength = 0.0832

        if GS==4 and ES==3: #Fit 11 6
            if B >= 0.1:
                trans_strength = 0.0832
            elif B < 0.1 and B >= 10e-4:
                trans_strength = 0.0833333346133657 + 1.08219068880264e-17/((-B))**4 + -4.25494436652391e-14/((-B))**3 + -6.31365209126638e-10*((-B))**2/(((-B))**4 - 9.53798829307758e-19 - 2.3694362036846*((-B))**7 - 2.3694362036846*((-B))**6)
            elif B < 10e-4 and B >= 0.0:
                trans_strength = 0.0770209759151018 + 0.0735162261314319*math.exp(46006.1996234966*((-B))) + 448.846206747094*((-B))*math.exp(14987.5511731407*((-B))) - 11.5845454947968*((-B)) - 5932.53768471421*((-B))**2 - 0.136349084951021*math.exp(30217.1044680878*((-B)))
            elif B < 0.0 and B >= -10e-4:
                trans_strength= 0.0140883247154161*math.exp(-1.16059872423927e-8/((-B)) + 55694280.6349919*((-B))**2 - 36096.0725595959*((-B)) - 78697743622604.4*((-B))**4)
            elif B < -10e-4 and B >= -0.1:
                trans_strength = 6.64897731678647e-7 + 0.0140213340597043/math.exp(36589.7800949612*((-B)) + 119501212834499*((-B))**4 - 61786349.2141431*((-B))**2)
            elif B < -0.1:
                trans_strength = 0

        if GS==4 and ES==2: #Fit 12 5
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0:
                trans_strength=0.0380681274669055 + 2.13719290114541*(-B) - 0.00163957785690334*math.sin(2.99220538357426 + 2443.07631634479*(-B)) - 4.37747330238525*(-B)*math.sin(2.99220538357426 + 2443.07631634479*(-B)) - 0.0380681274669055*math.sin(2.99220538357426 + 2397.69176521512*(-B) + math.sin(math.sin(math.sin(math.sin(6.0832386958357 + 4804.97762893915*(-B))))))
            elif B<0 and B>=-10e-4:
                trans_strength=0.0380681274669055 + 2.13719290114541*(-B) - 0.00163957785690334*math.sin(2.99220538357426 + 2443.07631634479*(-B)) - 4.37747330238525*(-B)*math.sin(2.99220538357426 + 2443.07631634479*(-B)) - 0.0380681274669055*math.sin(2.99220538357426 + 2397.69176521512*(-B) + math.sin(math.sin(math.sin(math.sin(6.0832386958357 + 4804.97762893915*(-B))))))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0832
            elif B<-0.1:
                trans_strength=0.0832

        if GS==4 and ES==4: #Fit 13 7
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0
            elif B<10e-4 and B>=0:
                trans_strength=0.00192521763651587 + 0.17788205843815*(-B) + 0.0142482216115707*math.exp(-19648697.2530107*(-B)**2) + (0.0192840363606575 + 226.878756119063*(-B)*math.exp(-19648697.2530107*(-B)**2))/(0.68493462411613 + 129089234.087972*(-B)**2 + 2516.45342974767*(-B)*math.exp(-19648697.2530107*(-B)**2)) - 1723.76129892656*(-B)**2
            elif B<0 and B>=-10e-4:
                trans_strength=0.00192521763651587 + 0.17788205843815*(-B) + 0.0142482216115707*math.exp(-19648697.2530107*(-B)**2) + (0.0192840363606575 + 226.878756119063*(-B)*math.exp(-19648697.2530107*(-B)**2))/(0.68493462411613 + 129089234.087972*(-B)**2 + 2516.45342974767*(-B)*math.exp(-19648697.2530107*(-B)**2)) - 1723.76129892656*(-B)**2
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==5 and ES==11: #Fit 14 14
            if B>=0.1:
                trans_strength=0.25
            elif B<0.1 and B>=10e-4:
                trans_strength=0.25
            elif B<10e-4 and B>=0:
                trans_strength=0.25
            elif B<0 and B>=-10e-4:
                trans_strength=0.25
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.25
            elif B<-0.1:
                trans_strength=0.25


    #PI
    elif pol==1:
        if GS==5 and ES==0: #Fit 1
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>=10e-4:
                trans_strength=0.166660926523341 + 37406.0040378819*B*math.exp(-277.571100129962*math.sqrt(B)) - 0.0715779350713165*math.exp(-119.511085731927*math.sqrt(B)) - 41156.000143311*B*math.exp(-283.720167050467*math.sqrt(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0980483784750268 + 777.253940928802*B + 708466.504480788*B**2 + 0.156123317576798*math.sin(math.sin(math.sin(math.sin(906443.817034854*B**2)))) - 47838.5500865118*B*math.sqrt(B)
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.091678376948984 + 532.306637628214*B + 444039505456.814*B**4 + 1209126873.46805*B**3 + 1207693.32669869*B**2 + 0.00833387683620536*math.exp(2253465225794.34*B**3)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==5 and ES==1: #Fit 2
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0.0:
                trans_strength=0.068077632941845 + 41697361042302*B**5 + 1.16911183988088*B*math.sqrt(1539346190.06783*B) - 756.228359185295*B - 802251.172307526*B**2
            elif B<0.0 and B>=-10e-4:
                trans_strength= 0.0647269762857477 - 646.163640663951*B - 1579170.7911993*B**2 - 1681980495.77815*B**3 - 651479587460.393*B**4
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.166666666675455 + 6.26584524093783e-14/B**3 + -1.03128094813835e-9/B**2
            elif B<-0.1:
                trans_strength=0.1666666


        if GS==2 and ES==2: #Fit 3
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=7.61101563305286e-5 + 4.59418957769952e-7/B + 3.10408657216647e-5*math.log(B) + -4.03811413174861e-11/B**2 + 0.00410617086837823/(math.exp(4244.45737598948*B) - 10.0148515422271 - math.log(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.028973696375951 + 1.67148760806475e-5*math.sqrt(6592862863.36302*B) + 0.00482665179735354*math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*B)))) + 0.0297943193168608*math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*B))))) - 23.3586874002181*B - 0.0283365793640568*math.exp(math.sin(math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*B))))))) - 6.62335062781888e-6*math.sqrt(6592862863.36302*B)*math.exp(math.sin(math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*B)))))))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0325075341500349 + 0.0242593989155997*math.exp(-20457118.9170289*B**2) + 176.160783878336*B*math.exp(-20457118.9170289*B**2) - 163.402851462634*B - 130861.912580386*B**2 - 40749391.7682275*B**3 - 0.0566340750788867*math.exp(-40914228.3194822*B**2)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.2605+0.02269*math.log((-B))+1.01*(-B)**2-0.3369*(-B)-0.006009*math.sin(4.315+math.log((-B)))-0.004386*math.sin(4.315+math.log((-B)))**2-1.011*(-B)**2*math.sin(4.315+math.log((-B)))
            elif B<-0.1:
                trans_strength=0.1666666


        if GS==3 and ES==2: #Fit 4
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0.0:
                trans_strength=0.675125232645124 + 5278378219.00367*B**3 + 0.294904036678141*math.log(0.16828504708728 + 5213797956.68611*B**3) - 191.899444164142*B - 4790541.04590063*B**2 - 871001945.969984*B**3*math.log(0.16828504708728 + 5213797956.68611*B**3)
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.298034545534945 - 141.236746494329*B - 2206083.66930854*B**2 - 3125262368.55165*B**3 - 1299299753907.43*B**4 - 0.145702463855018*math.exp(9216233272.40208*B*math.sin(B)**2)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.000104025117759824 + 0.00829707709744165*(B) + -5.01665872327596e-5/(B) + 0.0464361829121647*(B)**2 + -2.21498620039063e-8/(B)**2 + 0.0387507515361784*math.exp(168.007351868199*(B)) - 2747.42332447707*(B)**3*math.exp(168.007351868199*(B))
            elif B<-0.1:
                trans_strength=0.0


        if GS==2 and ES==3: #Fit 5
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength= 3.2450083744053 + -0.171587515921947/(0.136670269725789 + B) + -1.55538532351269e-5*math.cos(2.18223602075554*math.log(B))/B - 2.34078906764798*math.sqrt(B) - 1.81026702165504*math.cos(1.85514684536018*B) - 0.00895986984895101*math.cos(2.18223602075554*math.log(B)) - 0.00350373938502343*math.log(B)*math.cos(2.18223602075554*math.log(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.61651760645074 + 10.8995083440764*math.sqrt(B) + 16.0783007858784*math.sqrt(B)*math.log(0.515188417881384 + 26760.4851855569*B) - 564.809066976899*B - 1.29325717764576*math.sqrt(math.sqrt(0.0305470609018412 + 5281422.06475841*B**2 - math.sin(B)))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.999365261810867*math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(0.00233993596963997 + B + 0.074421218681326*math.exp(26376.2651229819*B)))))))))) - 0.00119783704746288 - 209.531349049904*B*math.exp(12967.5812572835*B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==3 and ES==3: #Fit 6
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>10e-4:
                trans_strength= 0.165308302331732 + -1.12942828665012e-5/B + 0.0673484701268287*math.sqrt(0.012013612433194*B) + 0.0700260479760101*B*math.sqrt(0.012013612433194*B) + -8.09864141387086e-6/(7.19935968975681e-5 + 0.00601589035374429*B + B**2 + 91.5706560366907*B**3) - 0.0131052145225196*B
            elif B<=10e-4 and B>=0.0:
                trans_strength=0.0586416965421188 + 0.0100341780601666*math.log(0.0069126481181834 + 611934.072786*B**2 - 99.3726817101384*B - 611934.072786*B**3 - 0.000493336424077944*math.cos(4.26943752328738 + 49836.5866602136*B))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0149555125955852 + 75.1893176747148*B + 58400849646.7518*B**4 + 159103557.933349*B**3 + 161644.189198933*B**2 - 0.00611401620210466*math.exp(51896.8829480536*B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0


        if GS==2 and ES==4: #Fit 7
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>=10e-4:
                trans_strength=0.165308302331732 + -1.12942828665012e-5/B + 0.0673484701268287*math.sqrt(0.012013612433194*B) + 0.0700260479760101*B*math.sqrt(0.012013612433194*B) + -8.09864141387086e-6/(7.19935968975681e-5 + 0.00601589035374429*B + B**2 + 91.5706560366907*B**3) - 0.0131052145225196*B
            elif B<10e-4 and B>=0.0:
                trans_strength= 0.0912578443778565 + 17.4052203915625*math.sqrt(B) + 13534.1750457469*B*math.sqrt(B) + 7.80465482108448*math.sin(math.sqrt(B))*math.log(0.127634723981916 + 335625.501267974*B*math.sqrt(B) - 3064.79674715215*B) + 360604.7963417*B**2/(0.127634723981916 + 335625.501267974*B*math.sqrt(B) - 3064.79674715215*B) - 1567.39062916577*B
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.17932159691613 + 385.573390078687*B + 435169.214483185*B**2 - 343038613289.339*B**4 - 174948202983324*B**5 - 0.0904780504337234*math.exp(26048.0616076127*B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.000104025117759824 + 0.00829707709744165*B + -5.01665872327596e-5/B + 0.0464361829121647*B**2 + -2.21498620039063e-8/B**2 + 0.0387507515361784*math.exp(168.007351868199*B) - 2747.42332447707*B**3*math.exp(168.007351868199*B)
            elif B<-0.1:
                trans_strength=0.0

        if GS==3 and ES==4: #Fit 8
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=3.2450083744053 + -0.171587515921947/(0.136670269725789 + B) + -1.55538532351269e-5*math.cos(2.18223602075554*math.log(B))/B - 2.34078906764798*math.sqrt(B) - 1.81026702165504*math.cos(1.85514684536018*B) - 0.00895986984895101*math.cos(2.18223602075554*math.log(B)) - 0.00350373938502343*math.log(B)*math.cos(2.18223602075554*math.log(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0166771919077116 + 0.104938930443093*math.sin(718.1112193102*B + math.sin(5.90432226144464 + 2727.06188659049*B)) + 0.0301807251333804*math.cos(math.sin(718.1112193102*B + math.sin(5.90432226144464 + 2727.06188659049*B))) + 285.03971080343*B*math.cos(math.sin(718.1112193102*B + math.sin(5.90432226144464 + 2727.06188659049*B)))**4 - 48.796024909633*B
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0567706212062748/math.exp(-20312.0730587842*B) + math.sin(math.sin(119420006903729*B**5)) - 0.0479098499179915 - 599.540112890324*B - 977474.84014484*B**2 - 649500416.482313*B**3
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.2605+0.02269*math.log((-B))+1.01*(-B)**2-0.3369*(-B)-0.006009*math.sin(4.315+math.log((-B)))-0.004386*math.sin(4.315+math.log((-B)))**2-1.011*(-B)**2*math.sin(4.315+math.log((-B)))
            elif B<-0.1:
                trans_strength=0.1666666

        if GS==4 and ES==5: #Fit 9
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0.0:
                trans_strength=0.091678376948984 + 532.306637628214*(-B) + 444039505456.814*(-B)**4 + 1209126873.46805*(-B)**3 + 1207693.32669869*(-B)**2 + 0.00833387683620536*math.exp(2253465225794.34*(-B)**3)
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0980483784750268 + 777.253940928802*(-B) + 708466.504480788*(-B)**2 + 0.156123317576798*math.sin(math.sin(math.sin(math.sin(906443.817034854*(-B)**2)))) - 47838.5500865118*(-B)*math.sqrt((-B))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.166660926523341 + 37406.0040378819*(-B)*math.exp(-277.571100129962*math.sqrt((-B))) - 0.0715779350713165*math.exp(-119.511085731927*math.sqrt((-B))) - 41156.000143311*(-B)*math.exp(-283.720167050467*math.sqrt((-B)))
            elif B<-0.1:
                trans_strength=0.1666666

        if GS==4 and ES==6: #Fit 10
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>=10e-4:
                trans_strength=0.166666666675455 + 6.26584524093783e-14/(-B)**3 + -1.03128094813835e-9/(-B)**2
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0647269762857477 - 646.163640663951*(-B) - 1579170.7911993*(-B)**2 - 1681980495.77815*(-B)**3 - 651479587460.393*(-B)**4
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.068077632941845 + 41697361042302*(-B)**5 + 1.16911183988088*(-B)*math.sqrt(1539346190.06783*(-B)) - 756.228359185295*(-B) - 802251.172307526*(-B)**2
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==0 and ES==7: #Fit 11
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0.0:
                trans_strength=0.999365261810867*math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(math.sin(0.00233993596963997 + (-B) + 0.074421218681326*math.exp(26376.2651229819*(-B))))))))))) - 0.00119783704746288 - 209.531349049904*(-B)*math.exp(12967.5812572835*(-B))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.61651760645074 + 10.8995083440764*math.sqrt((-B)) + 16.0783007858784*math.sqrt((-B))*math.log(0.515188417881384 + 26760.4851855569*(-B)) - 564.809066976899*(-B) - 1.29325717764576*math.sqrt(math.sqrt(0.0305470609018412 + 5281422.06475841*(-B)**2 - math.sin((-B))))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=3.2450083744053 + -0.171587515921947/(0.136670269725789 + (-B)) + -1.55538532351269e-5*math.cos(2.18223602075554*math.log((-B)))/(-B) - 2.34078906764798*math.sqrt((-B)) - 1.81026702165504*math.cos(1.85514684536018*(-B)) - 0.00895986984895101*math.cos(2.18223602075554*math.log((-B))) - 0.00350373938502343*math.log((-B))*math.cos(2.18223602075554*math.log((-B)))
            elif B<-0.1:
                trans_strength=0.0

        if GS==1 and ES==7: #Fit 12
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.0
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0149555125955852 + 75.1893176747148*(-B) + 58400849646.7518*(-B)**4 + 159103557.933349*(-B)**3 + 161644.189198933*(-B)**2 - 0.00611401620210466*math.exp(51896.8829480536*(-B))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0586416965421188 + 0.0100341780601666*math.log(0.0069126481181834 + 611934.072786*(-B)**2 - 99.3726817101384*(-B) - 611934.072786*(-B)**3 - 0.000493336424077944*math.cos(4.26943752328738 + 49836.5866602136*(-B)))
            elif B<-10e-4 and B>=-0.1:
                trans_strength= 0.165308302331732 + -1.12942828665012e-5/(-B) + 0.0673484701268287*math.sqrt(0.012013612433194*(-B)) + 0.0700260479760101*(-B)*math.sqrt(0.012013612433194*(-B)) + -8.09864141387086e-6/(7.19935968975681e-5 + 0.00601589035374429*(-B) + (-B)**2 + 91.5706560366907*(-B)**3) - 0.0131052145225196*(-B)
            elif B<-0.1:
                trans_strength=0.1666666

        if GS==0 and ES==8: #Fit 13
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>=10e-4:
                trans_strength=0.2605+0.02269*math.log(B)+1.01*B**2-0.3369*B-0.006009*math.sin(4.315+math.log(B))-0.004386*math.sin(4.315+math.log(B))**2-1.011*B**2*math.sin(4.315+math.log(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0325075341500349 + 0.0242593989155997*math.exp(-20457118.9170289*(-B)**2) + 176.160783878336*(-B)*math.exp(-20457118.9170289*(-B)**2) - 163.402851462634*(-B) - 130861.912580386*(-B)**2 - 40749391.7682275*(-B)**3 - 0.0566340750788867*math.exp(-40914228.3194822*(-B)**2)
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.028973696375951 + 1.67148760806475e-5*math.sqrt(6592862863.36302*(-B)) + 0.00482665179735354*math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*(-B))))) + 0.0297943193168608*math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*(-B)))))) - 23.3586874002181*(-B) - 0.0283365793640568*math.exp(math.sin(math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*(-B)))))))) - 6.62335062781888e-6*math.sqrt(6592862863.36302*(-B))*math.exp(math.sin(math.sin(math.sin(math.sin(0.103397982092181*math.sqrt(math.sqrt(6592862863.36302*(-B))))))))
            elif B<-10e-4 and B>=-0.1:
                trans_strength=7.61101563305286e-5 + 4.59418957769952e-7/(-B) + 3.10408657216647e-5*math.log((-B)) + -4.03811413174861e-11/(-B)**2 + 0.00410617086837823/(math.exp(4244.45737598948*(-B)) - 10.0148515422271 - math.log((-B)))
            elif B<-0.1:
                trans_strength=0.0

        if GS==1 and ES==8: #Fit 14
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.000104025117759824 + 0.00829707709744165*(-B) + -5.01665872327596e-5/(-B) + 0.0464361829121647*(-B)**2 + -2.21498620039063e-8/(-B)**2 + 0.0387507515361784*math.exp(168.007351868199*(-B)) - 2747.42332447707*(-B)**3*math.exp(168.007351868199*(-B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.298034545534945 - 141.236746494329*(-B) - 2206083.66930854*(-B)**2 - 3125262368.55165*(-B)**3 - 1299299753907.43*(-B)**4 - 0.145702463855018*math.exp(9216233272.40208*(-B)*math.sin((-B))**2)
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.675125232645124 + 5278378219.00367*(-B)**3 + 0.294904036678141*math.log(0.16828504708728 + 5213797956.68611*(-B)**3) - 191.899444164142*(-B) - 4790541.04590063*(-B)**2 - 871001945.969984*(-B)**3*math.log(0.16828504708728 + 5213797956.68611*(-B)**3)
            elif B<-10e-4 and B>=-0.1:
                trans_strength=0.0
            elif B<-0.1:
                trans_strength=0.0

        if GS==0 and ES==9: #Fit 15
            if B>=0.1:
                trans_strength=0.0
            elif B<0.1 and B>=10e-4:
                trans_strength=0.000104025117759824 + 0.00829707709744165*(-B) + -5.01665872327596e-5/(-B) + 0.0464361829121647*(-B)**2 + -2.21498620039063e-8/(-B)**2 + 0.0387507515361784*math.exp(168.007351868199*(-B)) - 2747.42332447707*(-B)**3*math.exp(168.007351868199*(-B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.17932159691613 + 385.573390078687*(-B) + 435169.214483185*(-B)**2 - 343038613289.339*(-B)**4 - 174948202983324*(-B)**5 - 0.0904780504337234*math.exp(26048.0616076127*(-B))
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0912578443778565 + 17.4052203915625*math.sqrt((-B)) + 13534.1750457469*(-B)*math.sqrt((-B)) + 7.80465482108448*math.sin(math.sqrt((-B)))*math.log(0.127634723981916 + 335625.501267974*(-B)*math.sqrt((-B)) - 3064.79674715215*(-B)) + 360604.7963417*(-B)**2/(0.127634723981916 + 335625.501267974*(-B)*math.sqrt((-B)) - 3064.79674715215*(-B)) - 1567.39062916577*(-B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength= 0.165308302331732 + -1.12942828665012e-5/(-B) + 0.0673484701268287*math.sqrt(0.012013612433194*(-B)) + 0.0700260479760101*(-B)*math.sqrt(0.012013612433194*(-B)) + -8.09864141387086e-6/(7.19935968975681e-5 + 0.00601589035374429*(-B) + (-B)**2 + 91.5706560366907*(-B)**3) - 0.0131052145225196*(-B)
            elif B<-0.1:
                trans_strength=0.1666666

        if GS==1 and ES==9: #Fit 16
            if B>=0.1:
                trans_strength=0.1666666
            elif B<0.1 and B>=10e-4:
                trans_strength=0.2605+0.02269*math.log(B)+1.01*B**2-0.3369*B-0.006009*math.sin(4.315+math.log(B))-0.004386*math.sin(4.315+math.log(B))**2-1.011*B**2*math.sin(4.315+math.log(B))
            elif B<10e-4 and B>=0.0:
                trans_strength=0.0567706212062748/math.exp(-20312.0730587842*(-B)) + math.sin(math.sin(119420006903729*(-B)**5)) - 0.0479098499179915 - 599.540112890324*(-B) - 977474.84014484*(-B)**2 - 649500416.482313*(-B)**3
            elif B<0.0 and B>=-10e-4:
                trans_strength=0.0166771919077116 + 0.104938930443093*math.sin(718.1112193102*(-B) + math.sin(5.90432226144464 + 2727.06188659049*(-B))) + 0.0301807251333804*math.cos(math.sin(718.1112193102*(-B) + math.sin(5.90432226144464 + 2727.06188659049*(-B)))) + 285.03971080343*(-B)*math.cos(math.sin(718.1112193102*(-B) + math.sin(5.90432226144464 + 2727.06188659049*(-B))))**4 - 48.796024909633*(-B)
            elif B<-10e-4 and B>=-0.1:
                trans_strength= 3.2450083744053 + -0.171587515921947/(0.136670269725789 + (-B)) + -1.55538532351269e-5*math.cos(2.18223602075554*math.log((-B)))/(-B) - 2.34078906764798*math.sqrt((-B)) - 1.81026702165504*math.cos(1.85514684536018*(-B)) - 0.00895986984895101*math.cos(2.18223602075554*math.log((-B))) - 0.00350373938502343*math.log((-B))*math.cos(2.18223602075554*math.log((-B)))
            elif B<-0.1:
                trans_strength=0.0

    if trans_strength>=0:
        return trans_strength
    elif trans_strength<0:
        return 0
    


####################################################################
# frequency_shifts of the shifted Energy lines for Lithium transitions    #
####################################################################


@njit(cache = True)
def calculate_transition_frequency_shift(GS,ES,pol,B):
    frequency_shift=0.0
    eps = 1e-16



    if B < 0:
        B=B-eps
    if B >= 0:
        B=B+eps
    #SIGMIN
    if pol==0:
        if GS==0 and ES==2: #1
            if B<-0.1:
                frequency_shift= 560799.177639235 + -411303.784962767/B + 47489.1025266*B**3 + -38.0680877918605/B**3 - 4667802420.45404*B
            elif B<=-10e-4 and B>=-0.1:
                frequency_shift= 244032826.522013 + 25118.2644178223/(B) + 3165351123928.17*(B)**5 - 17120976662.1052*(B) - 80552325888.3078*(B)**2 - 338301482862.04*(B)**3 - 5518764976.59964*math.sqrt(-0.319751556042591*(B))
            elif B>=10e-4 :
                frequency_shift=72932471.9878613 + -11833.9657165746/(B) + 1.74329644440657e29/(1.73199638079686e21 + 3.94454725467595e23*(B)) - 14016044901.1882*(B) - 1348129.54766875*(B)**2
            elif B<10e-4 and B>-10e-4:
                frequency_shift=148225780.478764 + 1.18731782090886e15*(B)**3 + 9865803.53836486*math.sqrt(math.sqrt((B)**2)) + 3.63615850026552e15*(B)**2*math.sqrt(math.sqrt((B)**2)) - 86050012009400.4*(B)**2 - 166612878543.263*(B)*math.sqrt(math.sqrt((B)**2)) - 4.44200766762781e16*(B)**2*math.sqrt((B)**2)

        if GS==1 and ES==2: #2
            if B<=-10e-4:
                frequency_shift= 76129274.057864 + 23354722688.8005*(B) + 291966.431479273/(B) + 2319581.63246271*(B)**2 + 248.953836038845/(B)**2 + 0.0782983460897249/(B)**3 + 4.87747537765732e15*(B)/(486476.304806036 + 93415075.4260559*(B) + 31694129995.3468*(B)**2)
            elif B>=10e-4:
                frequency_shift=2084169.32678986 + 3649019125704.79/(-46353.5082422897 - 8010017.98582021*(B)) - 42038310383.4069*(B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=28269118564.2888*(B)*math.sqrt(math.sqrt((B)**2)) + 184943162270.085*math.sqrt((B)**2)*math.sqrt(math.sqrt((B)**2)) - 72272569.0861265 - 15197172019.5472*(B) - 2538374220308.74*(B)**2 - 2785070.80023712*math.sqrt(2.59339271964246 + 74655327.8426994*(B)**2 - 5693.92913582543*(B))

        if GS==0 and ES==3: #3
            if B<=-10e-4:
                frequency_shift= -653318.046309275/(B) + -0.000468235801223552/(B)**4 + -1.29312655030712/(B)**3 + -1337.12341275685/(B)**2 - 7383854.78351328 - 42080121272.8843*(B) - 119548938.585044*(B)**3 - 122958188.831359*(B)**2
            elif B>=10e-4:
                frequency_shift=73726171.5594224 + 23355597249.3227*(B) + 8.39198383431678e15/(104365418.491572 + 18119345573.3728*(B)) - 3541710.78964091*(B)**2
            elif B<10e-4 and B>-10e-4:
                frequency_shift=151484513.908571 + 989823301601.174*(B)**2 + 358461.000874278*(B)*math.sqrt(11629867221747.5*(B)**2) + 5355.88458815838*math.sqrt(56426.5693802841 + 11629867221747.5*(B)**2) + -1214850129334.23*(B)/math.sqrt(56426.5693802841 + 11629867221747.5*(B)**2) - 5550666309.83102*(B) - 613345642556046*(B)**3

        if GS==1 and ES==3: #4
            if B<=-10e-4:
                frequency_shift= 84193099.9532992 + 637332.430571732/(B) + 321995096.573794*(B)**2 + 1286.14215292154/(B)**2 + 1.2303234481452/(B)**3 + 0.000442069945811053/(B)**4 - 13930360363.2937*(B)
            elif B>=10e-4:
                frequency_shift=1063631.16774314 + 9184.73872947041/(B) + 1898913.8239375*(B)**2 + 26920866533956.9/(-294712.283425772 - 59573723.5592261*(B)) - 4669429086.19853*(B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=18181488090.4402*math.sqrt(4.39397364343187e-9 + (B)**2 - 3.82271425769678e-5*(B)) + 1223541218257.17*(B)*math.sqrt(4.39397364343187e-9 + (B)**2 - 3.82271425769678e-5*(B)) - 73443143.4778167 - 14954635060.9545*(B) - 501403385422.39*(B)**2 - 506362264495032*(B)**3

        if GS==0 and ES==4: #5
            if B<=-10e-4:
                frequency_shift=-597309.849709201/(B) + -0.000334498114635579/(B)**4 + -1.00366599959289/(B)**3 + -1129.63879633335/(B)**2 - 4718426.36116666 - 23380914595.9384*(B) - 63488246.9778426*(B)**3 - 72883969.2018361*(B)**2
            elif B>=10e-4:
                frequency_shift=77783797.0901831 + 4662771850.00013*(B) + 4085322.29973371*(B)**2 + 2.94396965023053e15/(32125599.0083076 + 4528699557.23153*(B)) - 2686769.68265105*math.sqrt(3537357232.281/(77700283.7943367 + 9191427835.62446*(B)))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=151314628.417649 + 2.93439873881702e24*(B)**6 + 10793870655307.2*(B)**2 - 4977245942.60513*(B) - 7.32163212345083e18*(B)**4 - 7115533257.24496*math.sqrt((B)**2)

        if GS==1 and ES==4:#6
            if B<=-10e-4:
                frequency_shift=68282336.2852166 + 4633720967.88044*(B) - 44679784.4324386*(B)**2 - 141355771.072117*math.exp(119.021294145225*(B))
            elif B>=10e-4:
                frequency_shift= -4501893.64234935 - 23341351134.5426*(B) - 69708350.7210075*math.exp(-118.687752668759*(B))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=4.85769830018037e18*(B)**4 + 14544822571763.1*(B)**2 + 435118010896.901*(B)*math.sqrt((B)**2) - 73689838.0099854 - 14651444869.8116*(B) - 7530514979.22105*math.sqrt((B)**2) - 1.41324127152962e16*(B)**2*math.sqrt((B)**2)

        if GS==2 and ES==5: #7
            if B>0.1:
                frequency_shift = 1042.62589694878 + 413350.384859597 / B + 2.73746721704896 / B**4 - 14017157047.8971 * B - 105906.860329753 * B**4
            elif B<-0.1:
                frequency_shift=74444405.9038833 + (1.02514257176549e35 - 3.14024796401598e37*B)/(7.78923195156535e31*B**2 - 5.06955549693596e29*B) - 23352721680.9018*B
            elif B<=-10e-4 and B>=-0.1:
                frequency_shift=77357331.9169471 -13844719144692.9/(40764770.2573627*(B) - 177577.557961035) - 23345911662.7295*(B) - 28323348.209633*math.sin((B))*math.cos(160872.033783971*(B))
            elif B>=10e-4 and B<=0.1:
                frequency_shift=-1145351734.58427 - 341057137.674528*math.log((B)) - 26365198455.5605*(B)**2 - 22879313.9975398*math.log((B))**2 - 9443268693.6977*(B)**2*math.log((B)) - 16410955784.5279*(B)**2*math.log((B))**2
            elif B<10e-4 and B>-10e-4:
                frequency_shift=148570016.263266 + 230760.922904023*math.sqrt((B)**2)/(B) + 9.11391194269587e15*(B)**2*math.sqrt((B)**2) - 23253411989.1954*(B) - 8987716643691.48*(B)**2 - 3.2100798626766e18*(B)**4 - 4425154363.07173*math.sqrt((B)**2)

        if GS==3 and ES==5: #8
            if B>0.1:
                frequency_shift = 74565972.1562049 + (189108.380740394 * B - 420729.129860766) / (B + B**2) - 42037464394.6296 * B
            elif B<=-10e-4:
                frequency_shift=447294.828971434 + 4667499663.18391*(B) + 104168.368968975/(B) + 48.5019024311363/(B)**2 + 2.54224943250501e15*(B)**2/(234.551965874317 + 439998.054455964*(B) + 9334999330.63607*(B)**3)
            elif B>=10e-4 and B<=0.1:
                frequency_shift= 25248.3952318566/(B) + 3367655397.01225*math.sqrt((B)) + 32057025072.1021*(B)*math.sqrt((B)) - 173295447.609134 - 58941817634.6439*(B) - 44974573360.8972*(B)**2*math.sqrt((B))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=9.72299068307895e20*(B)**5 + 4891301773037.52*(B)**2 - 76699393.8253116 - 13058668837.8326*(B) - 1.6016258923372e15*(B)**3 - 2444.48867031535*math.sqrt((B)**2*math.sqrt(9.8413424073296e32*(B)**2))

        if GS==2 and ES==6: #9
            if B<=-10e-4:
                frequency_shift=72861302.5345626 + -5.9135941440765/(B)**2 + 32311481628001.1/(359406.114619506 - 73640265.2479707*(B)) - 42039087511.9819*(B) - 1577750.07742915*(B)**2
            elif B>=10e-4:
                frequency_shift= 4900069151.59268*(B) + 14149441.4909604*math.cos(math.log((B))) + 20550603.9167986*math.cos(math.log((B)))**2 + 2700764.37560624*math.cos(math.log((B)))**2*math.log((B)) + 811439604.438146*(B)**2*math.log((B))*math.cos(math.log((B))) - 100761516.991818 - 31424041.6285345*math.log((B)) - 432742.66416836*math.log((B))*math.cos(math.log((B)))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=151246127.449228 + 3.78796141190626e18*(B)**4 + 58519524675526.3*(B)**2 + 3394722433.35913*(B)*math.sqrt(math.sqrt(math.sqrt(math.sqrt(152701584.20567*(B)**2)))) - 28222122456.007*(B) - 28547817360734.5*(B)**2*math.sqrt(math.sqrt(math.sqrt(152701584.20567*(B)**2)))

        if GS==3 and ES==6: #10
            if B>0.1:
                frequency_shift = 71237649.6975806 - 23347138174.2429 * B
            elif B<=-10e-4:
                frequency_shift= 1531243.47033432 + 383636.553256948/(B) + 856.268322449546/(B)**2 + 0.89436317331468/(B)**3 + 0.000346081152565647/(B)**4 + 7919825.99616149*math.exp(5181147.88164666*(B)**3) - 14017553231.549*(B)
            elif B>=10e-4 and B<=0.1:
                frequency_shift=-45533.1522407416/(B) + 34573348572.8833*(B)**2*math.log((B)) + 203233273.34687*(B)*math.log((B))**4 - 2180762990.77446 - 4201131421.69551*(B) - 244227113.229007*math.log((B))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=4948816178093.98*(B)*math.sqrt((B)**2) + 2.59471552561115e15*(B)**2*math.sqrt((B)**2) + 873806281171.138*math.sqrt((B)**2*math.sqrt((B)**2)) - 73722158.9589145 - 15873528339.6888*(B) - 18463157116789.7*(B)**2 - 4610020935.1662*math.sqrt((B)**2) - 109111762828634*(B)*math.sqrt((B)**2*math.sqrt((B)**2))

        if GS==5 and ES==7:
            if B<=-10e-4:
                frequency_shift=261.376514175752/(B) + 1.48160310973275/((B)**2 - 3.35641136980589e-8*math.sin(67501.9250231599*(B))) - 75548489.5352504 - 23352712903.8537*(B)
            elif B>=10e-4:
                frequency_shift=14017227979.6064*(B) + 92760403524.012/(26155.0106928222 + 6.00219475017114e34*(B)**11) - 76749937.4208161
            elif B<10e-4 and B>-10e-4:
                frequency_shift=3331.21392037136*math.sqrt(209492.618322678 + 30852266308548.2*(B)**2) + -32636284.336775/math.sqrt(60486.4807827155 + 30852266308548.2*(B)**2) + 5986882349318.47*(B)/math.sqrt(63329045976818.9*(B)**2 + 3331.21392037136*math.sqrt(60486.4807827155 + 30852266308548.2*(B)**2)) - 73646613.6195894 - 4833782177.86102*(B)

        if GS==5 and ES==8:
            if B<=-10e-4:
                frequency_shift=14017228193.0985*(B) + 107.882955213056/(B) - 73299831.1784964
            elif B>=10e-4:
                frequency_shift=-146.649917727789/(B) - 74399879.839758 - 23352715938.1109*(B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=245178190.407866*math.sqrt(math.sqrt((B)**2)) + 83165052506.2305*(B)*math.sqrt(math.sqrt((B)**2)) - 77393509.2491898 - 7774268508.59522*(B) - 312538141760.631*(B)**2 - 22848880559.2439*math.sqrt((B)**2)

        if GS==5 and ES==9:
            if B<=-10e-4:
                frequency_shift=-118.458895011733/(B) - 75549949.2634995 - 4667743908.55592*(B)
            elif B>=10e-4:
                frequency_shift=-212.78130502308/(B) + 0.7697368724055/(B)**2 - 75548747.2352939 - 4667746255.9908*(B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=3.53825935292771e18*(B)**4 + 14521625900980.8*(B)**2 - 73677541.4879956 - 4237807986.99005*(B) - 231511041472669*(B)**3 - 3607.07903129077*math.sqrt(4447433589728.36*(B)**2) - 5697084994.75563*(B)**2*math.sqrt(4447433589728.36*(B)**2)

        if GS==4 and ES==10:
            if B<=-10e-4:
                frequency_shift=-76749937.4207902 - 14017227979.6063*(B)
            elif B>=10e-4:
                frequency_shift=-76749937.4207911 - 14017227979.6063*(B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=17358.7533237524/(1.22600241823802 - 14718089378.4039*(B)) - 76749937.4293769 - 14017227974.772*(B)

    #SIGPLS
    elif pol==2:


        #FIXME: Swapped GS2 and GS3. See Julias Plots for Reference
        if GS==3 and ES==8: #Fit 1 10
            if B>= 10e-4:
                frequency_shift = 76129274.057864 + 23354722688.8005 * ((-B)) + 291966.431479273 / ((-B)) + 2319581.63246271 * (
                    (-B)) ** 2 + 248.953836038845 / ((-B)) ** 2 + 0.0782983460897249 / ((-B)) ** 3 + 4.87747537765732e15 * (
                               (-B)) / (486476.304806036 + 93415075.4260559 * ((-B)) + 31694129995.3468 * ((-B)) ** 2)
            elif B<= -10e-4:
                frequency_shift = 2084169.32678986 + 3649019125704.79 / (
                            -46353.5082422897 - 8010017.98582021 * ((-B))) - 42038310383.4069 * ((-B))
            elif B> -10e-4 and B < 10e-4:
                frequency_shift = 28269118564.2888 * ((-B)) * math.sqrt(math.sqrt(((-B)) ** 2)) + 184943162270.085 * math.sqrt(
                    ((-B)) ** 2) * math.sqrt(math.sqrt(((-B)) ** 2)) - 72272569.0861265 - 15197172019.5472 * (
                               (-B)) - 2538374220308.74 * ((-B)) ** 2 - 2785070.80023712 * math.sqrt(
                    2.59339271964246 + 74655327.8426994 * ((-B)) ** 2 - 5693.92913582543 * ((-B)))


        elif GS==2 and ES==8: #Fit 2 11
            if B>0.1:
                frequency_shift = 560799.177639235 + -411303.784962767 / (-B) + 47489.1025266 * (-B) ** 3 + -38.0680877918605 / (-B) ** 3 - 4667802420.45404 * (-B)
            elif B>= 10e-4 and B<= 0.1:
                frequency_shift = 244032826.522013 + 25118.2644178223 / ((-B)) + 3165351123928.17 * (
                    (-B)) ** 5 - 17120976662.1052 * ((-B)) - 80552325888.3078 * ((-B)) ** 2 - 338301482862.04 * (
                               (-B)) ** 3 - 5518764976.59964 * math.sqrt(-0.319751556042591 * ((-B)))
            elif B <= -10e-4:
                frequency_shift = 72932471.9878613 + -11833.9657165746 / ((-B)) + 1.74329644440657e29 / (
                            1.73199638079686e21 + 3.94454725467595e23 * ((-B))) - 14016044901.1882 * (
                               (-B)) - 1348129.54766875 * ((-B)) ** 2
            elif B > -10e-4 and B< 10e-4:
                frequency_shift = 148225780.478764 + 1.18731782090886e15 * ((-B)) ** 3 + 9865803.53836486 * math.sqrt(
                    math.sqrt(((-B)) ** 2)) + 3.63615850026552e15 * ((-B)) ** 2 * math.sqrt(
                    math.sqrt(((-B)) ** 2)) - 86050012009400.4 * ((-B)) ** 2 - 166612878543.263 * ((-B)) * math.sqrt(
                    math.sqrt(((-B)) ** 2)) - 4.44200766762781e16 * ((-B)) ** 2 * math.sqrt(((-B)) ** 2)


        elif GS==2 and ES==7: #Fit 3 8
            if B >= 10e-4:
                frequency_shift= -653318.046309275/((-B)) + -0.000468235801223552/((-B))**4 + -1.29312655030712/((-B))**3 + -1337.12341275685/((-B))**2 - 7383854.78351328 - 42080121272.8843*((-B)) - 119548938.585044*((-B))**3 - 122958188.831359*((-B))**2
            elif B <= -10e-4:
                frequency_shift=73726171.5594224 + 23355597249.3227*(-B) + 8.39198383431678e15/(104365418.491572 + 18119345573.3728*(-B)) - 3541710.78964091*(-B)**2
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =151484513.908571 + 989823301601.174*(-B)**2 + 358461.000874278*(-B)*math.sqrt(11629867221747.5*(-B)**2) + 5355.88458815838*math.sqrt(56426.5693802841 + 11629867221747.5*(-B)**2) + -1214850129334.23*(-B)/math.sqrt(56426.5693802841 + 11629867221747.5*(-B)**2) - 5550666309.83102*(-B) - 613345642556046*(-B)**3

        elif GS==3 and ES==7: #Fit 4 9
            if B >= 10e-4:
                frequency_shift= 84193099.9532992 + 637332.430571732/((-B)) + 321995096.573794*((-B))**2 + 1286.14215292154/((-B))**2 + 1.2303234481452/((-B))**3 + 0.000442069945811053/((-B))**4 - 13930360363.2937*((-B))
            elif B <= -10e-4:
                frequency_shift=1063631.16774314 + 9184.73872947041/(-B) + 1898913.8239375*(-B)**2 + 26920866533956.9/(-294712.283425772 - 59573723.5592261*(-B)) - 4669429086.19853*(-B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=18181488090.4402*math.sqrt(4.39397364343187e-9 + (-B)**2 - 3.82271425769678e-5*(-B)) + 1223541218257.17*(-B)*math.sqrt(4.39397364343187e-9 + (-B)**2 - 3.82271425769678e-5*(-B)) - 73443143.4778167 - 14954635060.9545*(-B) - 501403385422.39*(-B)**2 - 506362264495032*(-B)**3

        elif GS==2 and ES==9: #Fit 5 12
            if B >= 10e-4:
                frequency_shift=-597309.849709201/((-B)) + -0.000334498114635579/((-B))**4 + -1.00366599959289/((-B))**3 + -1129.63879633335/((-B))**2 - 4718426.36116666 - 23380914595.9384*((-B)) - 63488246.9778426*((-B))**3 - 72883969.2018361*((-B))**2
            elif B <= -10e-4:
                frequency_shift=77783797.0901831 + 4662771850.00013*((-B)) + 4085322.29973371*((-B))**2 + 2.94396965023053e15/(32125599.0083076 + 4528699557.23153*((-B))) - 2686769.68265105*math.sqrt(3537357232.281/(77700283.7943367 + 9191427835.62446*((-B))))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=151314628.417649 + 2.93439873881702e24*(-B)**6 + 10793870655307.2*(-B)**2 - 4977245942.60513*(-B) - 7.32163212345083e18*(-B)**4 - 7115533257.24496*math.sqrt((-B)**2)

        elif GS==3 and ES==9: #Fit 6 13
            if B >= 10e-4:
                frequency_shift=68282336.2852166 + 4633720967.88044*(-B) - 44679784.4324386*(-B)**2 - 141355771.072117*math.exp(119.021294145225*(-B))
            elif B <= -10e-4:
                frequency_shift= -4501893.64234935 - 23341351134.5426*((-B)) - 69708350.7210075*math.exp(-118.687752668759*((-B)))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=4.85769830018037e18*(-B)**4 + 14544822571763.1*(-B)**2 + 435118010896.901*(-B)*math.sqrt((-B)**2) - 73689838.0099854 - 14651444869.8116*(-B) - 7530514979.22105*math.sqrt((-B)**2) - 1.41324127152962e16*(-B)**2*math.sqrt((-B)**2)

        elif GS==0 and ES==0: #Fit 7 1
            if B<-0.1:
                frequency_shift = 1042.62589694878 + 413350.384859597 / (-B) + 2.73746721704896 / (-B)**4 - 14017157047.8971 * (-B) - 105906.860329753 * (-B)**4
            elif B>0.1:
                frequency_shift=74444405.9038833 + (1.02514257176549e35 - 3.14024796401598e37*(-B))/(7.78923195156535e31*(-B)**2 - 5.06955549693596e29*(-B)) - 23352721680.9018*(-B)
            elif B>=10e-4 and B<=0.1:
                frequency_shift=77357331.9169471 -13844719144692.9/(40764770.2573627*((-B)) - 177577.557961035) - 23345911662.7295*((-B)) - 28323348.209633*math.sin(((-B)))*math.cos(160872.033783971*((-B)))
            elif B<=-10e-4 and B>=-0.1:
                frequency_shift=-1145351734.58427 - 341057137.674528*math.log(((-B))) - 26365198455.5605*((-B))**2 - 22879313.9975398*math.log(((-B)))**2 - 9443268693.6977*((-B))**2*math.log(((-B))) - 16410955784.5279*((-B))**2*math.log(((-B)))**2
            elif B<10e-4 and B>-10e-4:
                frequency_shift=148570016.263266 + 230760.922904023*math.sqrt((-B)**2)/(-B) + 9.11391194269587e15*(-B)**2*math.sqrt((-B)**2) - 23253411989.1954*(-B) - 8987716643691.48*(-B)**2 - 3.2100798626766e18*(-B)**4 - 4425154363.07173*math.sqrt((-B)**2)

        elif GS==1 and ES==0: #Fit 8 2
            if B >= 10e-4:
                frequency_shift=447294.828971434 + 4667499663.18391*(-B) + 104168.368968975/(-B) + 48.5019024311363/(-B)**2 + 2.54224943250501e15*(-B)**2/(234.551965874317 + 439998.054455964*(-B) + 9334999330.63607*(-B)**3)
            elif B<-0.1:
                frequency_shift = 74565972.1562049 + (189108.380740394 * (-B) - 420729.129860766) / ((-B) + (-B)**2) - 42037464394.6296 * (-B)
            elif B<=-10e-4 and B>=-0.1:
                frequency_shift= 25248.3952318566/((-B)) + 3367655397.01225*math.sqrt(((-B))) + 32057025072.1021*((-B))*math.sqrt(((-B))) - 173295447.609134 - 58941817634.6439*((-B)) - 44974573360.8972*((-B))**2*math.sqrt(((-B)))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=9.72299068307895e20*(-B)**5 + 4891301773037.52*(-B)**2 - 76699393.8253116 - 13058668837.8326*(-B) - 1.6016258923372e15*(-B)**3 - 2444.48867031535*math.sqrt((-B)**2*math.sqrt(9.8413424073296e32*(-B)**2))

        elif GS==0 and ES==1: #Fit 9 3
            if B >= 10e-4:
                frequency_shift=72861302.5345626 + -5.9135941440765/(-B)**2 + 32311481628001.1/(359406.114619506 - 73640265.2479707*(-B)) - 42039087511.9819*(-B) - 1577750.07742915*(-B)**2
            elif B <= -10e-4:
                frequency_shift= 4900069151.59268*((-B)) + 14149441.4909604*math.cos(math.log(((-B)))) + 20550603.9167986*math.cos(math.log(((-B))))**2 + 2700764.37560624*math.cos(math.log(((-B))))**2*math.log(((-B))) + 811439604.438146*((-B))**2*math.log(((-B)))*math.cos(math.log(((-B)))) - 100761516.991818 - 31424041.6285345*math.log(((-B))) - 432742.66416836*math.log(((-B)))*math.cos(math.log(((-B))))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=151246127.449228 + 3.78796141190626e18*(-B)**4 + 58519524675526.3*(-B)**2 + 3394722433.35913*(-B)*math.sqrt(math.sqrt(math.sqrt(math.sqrt(152701584.20567*(-B)**2)))) - 28222122456.007*(-B) - 28547817360734.5*(-B)**2*math.sqrt(math.sqrt(math.sqrt(152701584.20567*(-B)**2)))

        elif GS==1 and ES==1: #Fit 10 4
            if B >= 10e-4:
                frequency_shift= 1531243.47033432 + 383636.553256948/((-B)) + 856.268322449546/((-B))**2 + 0.89436317331468/((-B))**3 + 0.000346081152565647/((-B))**4 + 7919825.99616149*math.exp(5181147.88164666*((-B))**3) - 14017553231.549*((-B))
            elif B<-0.1:
                frequency_shift = 71237649.6975806 - 23347138174.2429 * (-B)
            elif B<=-10e-4 and B>=-0.1:
                frequency_shift=-45533.1522407416/((-B)) + 34573348572.8833*((-B))**2*math.log(((-B))) + 203233273.34687*((-B))*math.log(((-B)))**4 - 2180762990.77446 - 4201131421.69551*((-B)) - 244227113.229007*math.log(((-B)))
            elif B<10e-4 and B>-10e-4:
                frequency_shift=4948816178093.98*(-B)*math.sqrt((-B)**2) + 2.59471552561115e15*(-B)**2*math.sqrt((-B)**2) + 873806281171.138*math.sqrt((-B)**2*math.sqrt((-B)**2)) - 73722158.9589145 - 15873528339.6888*(-B) - 18463157116789.7*(-B)**2 - 4610020935.1662*math.sqrt((-B)**2) - 109111762828634*(-B)*math.sqrt((-B)**2*math.sqrt((-B)**2))

        elif GS==4 and ES==3: #Fit 11 6
            if B >= 10e-4:
                frequency_shift=261.376514175752/(-B) + 1.48160310973275/((-B)**2 - 3.35641136980589e-8*math.sin(67501.9250231599*(-B))) - 75548489.5352504 - 23352712903.8537*(-B)
            elif B <= -10e-4:
                frequency_shift=14017227979.6064*(-B) + 92760403524.012/(26155.0106928222 + 6.00219475017114e34*(-B)**11) - 76749937.4208161
            elif B<10e-4 and B>-10e-4:
                frequency_shift=3331.21392037136*math.sqrt(209492.618322678 + 30852266308548.2*(-B)**2) + -32636284.336775/math.sqrt(60486.4807827155 + 30852266308548.2*(-B)**2) + 5986882349318.47*(-B)/math.sqrt(63329045976818.9*(-B)**2 + 3331.21392037136*math.sqrt(60486.4807827155 + 30852266308548.2*(-B)**2)) - 73646613.6195894 - 4833782177.86102*(-B)

        elif GS==4 and ES==2: #Fit 12 5
            if B >= 10e-4:
                frequency_shift=14017228193.0985*(-B) + 107.882955213056/(-B) - 73299831.1784964
            elif B <= -10e-4:
                frequency_shift=-146.649917727789/(-B) - 74399879.839758 - 23352715938.1109*(-B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=245178190.407866*math.sqrt(math.sqrt((-B)**2)) + 83165052506.2305*(-B)*math.sqrt(math.sqrt((-B)**2)) - 77393509.2491898 - 7774268508.59522*(-B) - 312538141760.631*(-B)**2 - 22848880559.2439*math.sqrt((-B)**2)

        elif GS==4 and ES==4: #Fit 13 7
            if B >= 10e-4:
                frequency_shift=-118.458895011733/(-B) - 75549949.2634995 - 4667743908.55592*(-B)
            elif B <= -10e-4:
                frequency_shift=-212.78130502308/(-B) + 0.7697368724055/(-B)**2 - 75548747.2352939 - 4667746255.9908*(-B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=3.53825935292771e18*(-B)**4 + 14521625900980.8*(-B)**2 - 73677541.4879956 - 4237807986.99005*(-B) - 231511041472669*(-B)**3 - 3607.07903129077*math.sqrt(4447433589728.36*(-B)**2) - 5697084994.75563*(-B)**2*math.sqrt(4447433589728.36*(-B)**2)

        elif GS==5 and ES==11: #Fit 14 14
            if B >= 10e-4:
                frequency_shift=-76749937.4207902 - 14017227979.6063*(-B)
            elif B <= -10e-4:
                frequency_shift=-76749937.4207911 - 14017227979.6063*(-B)
            elif B<10e-4 and B>-10e-4:
                frequency_shift=17358.7533237524/(1.22600241823802 - 14718089378.4039*(-B)) - 76749937.4293769 - 14017227974.772*(-B)

    #PI
    elif pol==1:
        if GS == 5 and ES == 0:  # Fit 1
            if B >= 10e-4:
                frequency_shift = 84.7090972948803/(B) + -0.00134153948256754/(B)**3 + -11777.9455741111*math.sin((B))/(0.00273798143192203 - 201.528293229248*(B)**2) - 74399970.2419944 - 4667743820.97517*(B) - 107.088887417826*(B)**3
            elif B <= -10e-4:
                frequency_shift = 14017226568.0934*( B) + -1.76788936550567/( math.sin( math.sin(( B)))* math.cos(3.0571412279776*( B))* math.sin( math.sin( math.sin( math.sin(( B)))))) - 73300698.8812592
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =3899154652.32811*(B) + 600125965662215*(B)**3 + 21546661.8452838*math.sqrt(2.15978947346373e18*(B)**6) - 76755177.3152042 - 26116397147349.6*(B)**2 - 1.36467651804016e19*(B)**4
        if GS == 5 and ES == 1:  # Fit 2
            if B >= 10e-4:
                frequency_shift =14017227979.6063*(B) - 76749937.4207907
            elif B <= -10e-4:
                frequency_shift = -118.688623826985/( math.sin(( B))* math.cos(( B)* math.cos(1.87563376662535*( B)))) - 75549970.1169525 - 4667743921.83091*( B)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =7070884100.9766*(B) + 5.83483950871006e18*(B)**4 + 728028561479969*(B)**3 + 36340453118787.6*(B)**2 - 73748477.0006454 - 88821405426.687*(B)*math.sqrt(math.sqrt((B)**2)) - 1.08017239905221e15*(B)**2*math.sqrt(math.sqrt((B)**2))
        if GS == 2 and ES == 2:  # Fit 3
            if B >= 10e-4:
                frequency_shift = 10469777.056086*math.log((B))**2 + 9885.55395454213*math.log((B))**5 + 248752198.429611*(B)*math.log((B))**2 - 225437012.730743 - 16281138370.069*math.sin((B)) - 741015846.817742*math.sin((B))*math.log((B)) - 4100772955.64017*(B)**2*math.log((B))
            elif B <= -10e-4:
                frequency_shift = 92095297.9202387*math.sqrt(math.sqrt(-1.01225918065005*(B))) + 34808155.8661358/math.sqrt(math.sqrt(-1.01225918065005*(B))) + (32675.0861048035 + 152730.129680829*math.sqrt(-1.01225918065005*(B)))/(B) - 32260389.0557654 - 4645225497.14381*(B)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =148214983.834344 + 3.66768301052465e19*(B)**4 - 12300732766.9476*(B) - 34268955677756.9*(B)**2 - 1.39171432416608e15*(B)**3 - 1.80214647820405e25*(B)**6
        if GS == 3 and ES ==2 :  # Fit 4
            if B >= 10e-4:
                frequency_shift = 1077383653.05618 + 149102232.299563*math.log((B)) + 117039754.930282*(B)**2 + 757123862.56112*math.log((B))*math.sqrt((B)) + (9.37022073233893*math.log((B)) - 586.898137026034*math.log((B))*math.sqrt((B)))/(B)**2 - 43150283423.9296*(B)
            elif B <= -10e-4:
                frequency_shift = 989087.791519657 + 23353456063.0116*( B) + 8.57372499384238e22/(1.92296184582771e17*( B) - 983129235002453)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =3.59627627852029e19*(B)**4 - 76787801.6472951 - 2946447626.85452*(B) - 35622508865268.5*(B)**2 - 1.46668463823242e15*(B)**3 - 1.74666930039279e25*(B)**6
        if GS == 2 and ES ==3 :  # Fit 5
            if B >= 10e-4:
                frequency_shift = 23771544554.0952*(B) + -50341.1233450724/(B) + 243618204.14109*(B)*math.log((B))**2 + 149618920.207658*(B)**3*math.log((B))**5 - 388499189.564007 - 80805959.3253507*math.log((B)) - 196081923.107687*(B)*math.log((B))
            elif B <= -10e-4:
                frequency_shift = 73084520.1778852 + -425939.132863085/( B) + 145341289870.667/(334102.878755659*( B) - 74352529.6851779*( B) **2) - 42037962937.8757*( B)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =152975883.670483 + 3.88708421671237e15*(B)**3 + 22453165368.7958*math.sqrt((B)**2) + 6547586.83096662*(B)*math.sqrt(12198376782.4083*math.sqrt((B)**2)) - 23015823142.0373*(B) - 18223739975095.7*(B)*math.sqrt((B)**2) - 1344.27986754034*math.sqrt(12198376782.4083*math.sqrt((B)**2))
        if GS == 3 and ES ==3 :  # Fit 6
            if B >= 10e-4:
                frequency_shift = 213500881.512733 + 2193519004.24807*math.sin((B)) + 38622982.890952*math.log(math.sin((B))) + 1038986625.3069*(B)*math.sqrt(math.sin(math.sin((B)))) - 7698473313.31109*(B)
            elif B <= -10e-4:
                frequency_shift = 11965297.7925069*math.log(-495052097.672931*(B)) - 214664013.622291 - 14002377477.6468*(B) - 5785567.72852069*math.sin(math.log(-495052097.672931*(B))) - 86983.6418094719*math.sin(math.log(-495052097.672931*(B)))**3 - 1245670.61539452*math.sin(math.log(-495052097.672931*(B)))**2 - 310493.491041855*math.log(-495052097.672931*(B))*math.cos(math.log(-495052097.672931*(B)))
            elif B < 10e-4 and B > -10e-4:
                frequency_shift = 61795134054.6257*(B)**2 + 14955304.7392606*(B)*math.sqrt(48780197882399.6*(B)**2) + 2589.45256320715*math.sqrt(270386.365434033 + 48780197882399.6*(B)**2) - 73584915.9690833 - 5421641589.85888*(B) - 14877723.2000059*(B)*math.sqrt(270386.365434033 + 48780197882399.6*(B)**2) - 67408532.9856301*(B)**2*math.sqrt(270386.365434033 + 48780197882399.6*(B)**2)
        if GS ==2  and ES == 4:  # Fit 7
            if B >= 10e-4:
                frequency_shift = 4663606468.12391*(B) + 146797119.496764*math.cos((B)) + 102390043.769362*(B)*math.log((B)) + 21676412.0489379*math.cos((B))*math.log((B)) + 5.23939241039755e15/(19894541.6751817 + 4415257449.7148*(B)) + -0.0230021180481584*math.cos(-0.0230021180481584/(B))/(B)**2 - 80198836.5040908
            elif B <= -10e-4:
                frequency_shift = 86710686.3112605 + -54888.185173748/( B) + 281769275.388747*( B) **2* math.cos(( B)) **3* math.cos(1.07880238003213*( B)) - 23245205366.7596*( B)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =149960767.888677 + 344001529823315*(B)**3 + 402680958698.349*(B)**2 + 166995.852529233*math.exp(1.98587094847893*math.cos(-6185.42260276296*(B))) - 14486586581.5403*(B) - 162886700775.133*(B)**2*math.exp(1.98587094847893*math.cos(-6185.42260276296*(B)))
        if GS == 3 and ES ==4 :  # Fit 8
            if B >= 10e-4:
                frequency_shift = 78292122.8455205 + -521739.872990442/(B) + 16003632.7586338*(B)**2 + 556.027589460594/(B)**2 + 4.39497133936715e-11/(B)**6 + -0.000214433523680001/(B)**4 - 23378649626.1971*(B) - 37139282.0469101*(B)**2*math.log((B))
            elif B <= -10e-4:
                frequency_shift = 70612387.4415726*(B)**2 + 8755408.95263229*math.log(-7.40790471659457e28*(B)) + 9967937.5311559*math.cos(math.log(-7.40790471659457e28*(B))) + 71126044.2522641*(B)*math.log(-7.40790471659457e28*(B)) + 45038.7131709438*math.sin(math.sin(math.sin(4.12266129664781*math.log(-7.40790471659457e28*(B))))) - 578496060.676187
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =15786825764648.5*(B)**2 + 5.0873906844908e18*(B)**3*math.sin((B)) + 145258.293831442*(B)*math.sqrt(5136116732634.13*(B)*math.sin((B))) - 73665137.8679275 - 5227777936.08628*(B) - 3541.73878471723*math.sqrt(5136116732634.13*(B)*math.sin((B))) - 6703453483.36404*math.sin((B))**2*math.sqrt(5136116732634.13*(B)*math.sin((B)))
        if GS == 4 and ES == 5:  # Fit 9
            if B >= 10e-4:
                frequency_shift = -73300880.1894828 - 14017226174.1849*(B)
            elif B <= -10e-4:
                frequency_shift = 4667743441.98307*( B) + -163.390053845307/( B) + 0.00142450651485796/( B) **3 - 74400179.828931
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =1.80590480871639e15*(B)**3 + 2.28575853742854*math.sqrt(1947220.55543743*math.sqrt(1.91156418464067e18*(B)**2)) - 77069141.0020638 - 2934577242.50559*(B) - 8.27434829556178*math.sqrt(1.91156418464067e18*(B)**2) - 2300.69307645932*(B)*math.sqrt(1.91156418464067e18*(B)**2)
        if GS ==4  and ES ==6 :  # Fit 10
            if B >= 10e-4:
                frequency_shift = 4667744249.86635*(B) + 118.746853032633/(B) - 75550024.7395474 - 337.832650879399*(B)**2
            elif B <= -10e-4:
                frequency_shift = -76749937.4207907 - 14017227979.6063*( B)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =1235215.47693206*(B)*math.sqrt(18154641518554.2*(B)**2) + 0.0461332391140129*math.sqrt(1.96642766998832e19*(B)**2*math.sqrt(18154641518554.2*(B)**2)) - 73769131.8941414 - 6601252530.47129*(B) - 260.171095932395*math.sqrt(18154641518554.2*(B)**2) - 12.7085689671909*(B)*math.sqrt(1.96642766998832e19*(B)**2*math.sqrt(18154641518554.2*(B)**2)) - 3.5475670962887e-6*math.sqrt(18154641518554.2*(B)**2)*math.sqrt(1.96642766998832e19*(B)**2*math.sqrt(18154641518554.2*(B)**2))
        if GS ==0  and ES ==7 :  # Fit 11
            if B >= 10e-4:
                frequency_shift = 157294294.703124 + 43053049958.7221*(B) + 18815134778.9472*(B)**4 - 7230484804.79028*(B)**3 - 14899474114.249*(B)**5 - 6092.53709811507*math.sqrt(8532705224.21493*(B))
            elif B <= -10e-4:
                frequency_shift = -440607.329707016/(B) + -137.480645341889/(B)**2 - 810896.720375878 - 23353140995.6042*(B) - 1.17354675621173e20*math.exp(-26.8170082362905 - 446867.649838324*(B)**2)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =151650799.360266 + 14420314526.7152*(B) + 2256068440145.75*(B)**2 + 4.05314211306479*math.sqrt(74365085746.3995 + 777368463332253*(B) + 1.84315072547705e19*(B)**2) - 64.3748020961695*(B)*math.sqrt(74365085746.3995 + 777368463332253*(B) + 1.84315072547705e19*(B)**2) - 144289.656690383*(B)**2*math.sqrt(74365085746.3995 + 777368463332253*(B) + 1.84315072547705e19*(B)**2)
        if GS ==1  and ES ==7 :  # Fit 12
            if B >= 10e-4:
                frequency_shift = 14079708248.6521*(B) + -57500.731948856/(B) + 140960587.653576*(B)*math.sin((B))**3 - 7224695.98957614 - 138317530.695095*(B)**2*math.cos((B))
            elif B <= -10e-4:
                frequency_shift = 75923966.9032149 + 4668314771.42822*(B) + 444635.50148187/(B) + 160.698771597564/(B)**2 + 191678536.607283*math.exp(234177663.784864*(B)**3)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =7926511079.41149*(B) + 3.44442546172038e15*(B)**3 + 5199489788071.18*(B)**2 + 393.729010627555*math.sqrt(1.23676436157695e15*(B)**2) - 72623784.5339062 - 2.41703311814581e18*(B)**4 - 171786.697849344*(B)*math.sqrt(1.23676436157695e15*(B)**2)
        if GS == 0 and ES ==8 :  # Fit 13
            if B >= 10e-4:
                frequency_shift = 4352875839.60728*(B) + 427014806.840698*(B)**2 - 31153267.3266155 - 26899110.8771373*math.log((B)) - 304290237.608212*(B)*math.log((B)) - 190891805.056878*(B)**2*math.log((B))
            elif B <= -10e-4:
                frequency_shift = 46334060021.0988 + 14060104623.7146*(B) + 193093347.767856*math.log(46334060021.0988 + 68905158992.0435/(B) + 1.37791060696884e21*(B)**2) - 13024952124.6703*math.log(23.3158879476143 + math.log(682259456626.31 + 1.35354282724013e21*(B)**2))
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =148290008.898952 + 3928769049.75783*(B) + 6721545768.71345*(B)*math.sqrt(math.sqrt(math.sqrt(math.sqrt(296580017.173921*(B)**2)))) + 46467392671601.4*(B)**2*math.sqrt(math.sqrt(math.sqrt(296580017.173921*(B)**2))) - 104464884795724*(B)**2 - 5.3935454054482e18*(B)**4
        if GS ==1  and ES ==8 :  # Fit 14
            if B >= 10e-4:
                frequency_shift = 25399001108.0832*(B)**3 + 18632059912.3113*(B)**5 - 50941203.3961253 - 22273335714.8289*(B) - 7917278008.35473*(B)**2 - 36321989369.896*(B)**4
            elif B <= -10e-4:
                frequency_shift = 77666554.7569221 + 42042940772.4544*(B) + 56867.373847737/(B) + 11942931.0816391*(B)**2*math.exp((B)) + 1.78540589551073e16*(B)/(188909.450631598 + 43706395209.3388*(B)**2)
            elif B < 10e-4 and B > -10e-4:
                frequency_shift =2623823592.57256*(B)*math.sqrt(math.sqrt(math.sqrt(math.sqrt(1.95574299565832e15*(B)**2)))) + 6538219865250.1*(B)**2*math.sqrt(math.sqrt(math.sqrt(1.95574299565832e15*(B)**2))) - 76706921.0706217 - 5745784075.86432*(B) - 106095359480380*(B)**2 - 5.49395839215154e18*(B)**4
        if GS ==0  and ES ==9 :  # Fit 15
            if B >= 10e-4:
                frequency_shift = 74209995.6433806 + 23353124438.9084*(B) + 7.47267905973787e15/(94066787.2144691 + 17105059699.7756*(B))
            elif B <= -10e-4:
                frequency_shift = -510795.142993995/( B) + 0.000125196779969432/( B) **4 + -501.61535577262/( B) **2 - 2661402.78631828 - 4682556470.68362*( B) - 38139983.5549393*( B) **3 - 40925644.0773204*( B) **2
            elif B < 10e-4 and B > -10e-4:
                frequency_shift = 151320468.390163 + 14269958067.6531*(B) + 3.20095760608228e24*(B)**6 + 11162168279312.7*(B)**2 - 7.85738162468167e18*(B)**4 - 60924.5022047471*math.sqrt(14064806918.6422*(B)**2)
        if GS == 1 and ES ==9 :  # Fit 16
            if B >= 10e-4:
                frequency_shift = 26030.3579582198*math.sqrt(604078386.966437*math.sqrt((B))) - 156236650.096483 - 4295137364.53018*(B) - 101065119.713703*(B)**2 - 17456.9853128278*math.sqrt(1935889358.41773*(B))
            elif B <= -10e-4:
                frequency_shift = 76409335.2863814 + 23357311770.0851*(B) + 46691.255379802/(B) + 8876778.45122102*(B)**2 + (4.22976262160485e20*(B) - 1.5544672991858e17)/(5560577816.38147 + 1.04510449564985e15*(B)**2) - 10485174.1818272*(B)**4
            elif B < 10e-4 and B > -10e-4:
                frequency_shift = 5101907058.39677*(B) + 5.86753863684053e18*(B)**4 + 17166318151746.1*(B)**2 - 73609026.3136625 - 216327731776574*(B)**3 - 119008.654713774*math.sqrt(5110411754.09846*(B)**2) - 236513025895.883*(B)**2*math.sqrt(5110411754.09846*(B)**2)



    if frequency_shift!=0:

            return frequency_shift # in Hz
    else:
        return 0 #return 0
    





@njit
def _calculate_transition_rate(saturation_parameters,
                   total_saturation_parameter,
                   natural_linewidth,
                   excitation_rates):
    n_lasers = excitation_rates.shape[0]
    n_excited = excitation_rates.shape[1]
    for j in range(n_lasers):
        for ex in range(n_excited):
            for pol in range(3):
                sat = saturation_parameters[j, ex, pol]
                excitation_rates[j, ex, pol] = (0.5* sat * natural_linewidth) / (1.0 + total_saturation_parameter)




@njit
def _calculate_saturation_parameter(effective_transition_frequency: float, # in Hz
                                    doppler_shift: float, # in rad/s
                                    laser_beam_frequency: float, # in Hz
                                    detuning: float, # in rad/s
                                    transition_strength: float, 
                                    laser_intensity: float, # in W
                                    natural_linewidth: float):# in rad/s



        laser_beam_frequency_rad = laser_beam_frequency*2*scc.pi

        effective_transition_frequency_rad = effective_transition_frequency*2*scc.pi
        
        
        effective_detuning =  laser_beam_frequency_rad - doppler_shift + detuning - effective_transition_frequency_rad 

        # Calculate Rabi frequencies (with a scaling factor from literature).

        rabi_frequency = 2*scc.pi * 1e6 * 11.925*4.37* transition_strength * math.sqrt(0.001*laser_intensity) # 11.925 is the reduced D2-line matrix element for Li6 (Gehm 2003)

        #  Compute saturation parameters using squared effective detunings.
        saturation_parameter = 0.5 * rabi_frequency**2 / (effective_detuning**2 + 0.25 * natural_linewidth**2)
        return saturation_parameter